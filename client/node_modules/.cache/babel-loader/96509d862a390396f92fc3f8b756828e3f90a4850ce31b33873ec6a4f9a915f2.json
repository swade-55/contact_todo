{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Projects/contact_todo/client/src/components/NewCompanyForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCompany } from './slices/companiesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCompanyForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const loggedInUserId = useSelector(state => {\n    var _state$auth$user;\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user.id;\n  });\n  console.log('this is new id', loggedInUserId);\n  const initialValues = {\n    name: ''\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Company name is required')\n  });\n  const onSubmit = (values, {\n    resetForm\n  }) => {\n    if (loggedInUserId) {\n      const companyData = {\n        ...values,\n        manager_id: loggedInUserId\n      };\n      dispatch(addCompany(companyData));\n      resetForm();\n      navigate('/manage-companies');\n    } else {\n      console.error(\"User ID is not available\");\n    }\n  };\n  const handleBack = () => {\n    navigate('/manage-companies');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card bg-base-100 shadow-xl p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        className: \"btn px-10 py-3 text-lg\",\n        children: \"Back to Manage Companies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"card-title my-4\",\n        children: \"Add New Company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: onSubmit,\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"label\",\n            children: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"name\",\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Company Name\",\n            className: \"input input-bordered w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            component: \"div\",\n            className: \"text-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: \"btn btn-primary mt-4 btn-lg\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCompanyForm, \"jZc8qBrx5EWv+Gvfox7pGgkNUXc=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = NewCompanyForm;\nexport default NewCompanyForm;\nvar _c;\n$RefreshReg$(_c, \"NewCompanyForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","useNavigate","Yup","useDispatch","useSelector","addCompany","jsxDEV","_jsxDEV","NewCompanyForm","_s","navigate","dispatch","loggedInUserId","state","_state$auth$user","auth","user","id","console","log","initialValues","name","validationSchema","object","shape","string","required","onSubmit","values","resetForm","companyData","manager_id","error","handleBack","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isSubmitting","htmlFor","type","placeholder","component","disabled","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Projects/contact_todo/client/src/components/NewCompanyForm.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCompany } from './slices/companiesSlice';\n\nconst NewCompanyForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const loggedInUserId = useSelector((state) => state.auth.user?.id);\n  \n  console.log('this is new id',loggedInUserId)\n\n  const initialValues = {\n    name: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Company name is required'),\n  });\n\n  const onSubmit = (values, { resetForm }) => {\n    if (loggedInUserId) {\n      const companyData = { ...values, manager_id: loggedInUserId };\n      dispatch(addCompany(companyData));\n      resetForm();\n      navigate('/manage-companies');\n    } else {\n      console.error(\"User ID is not available\");\n    }\n  };\n\n  const handleBack = () => {\n    navigate('/manage-companies');\n  };\n\n  \n\n  return (\n    <div className=\"card bg-base-100 shadow-xl p-5\">\n      <div className=\"card-body\">\n        <button onClick={handleBack} className=\"btn px-10 py-3 text-lg\">\n          Back to Manage Companies\n        </button>\n        <h1 className=\"card-title my-4\">Add New Company</h1>\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n          {({ isSubmitting }) => (\n            <Form>\n              <label htmlFor=\"name\" className=\"label\">\n                Company Name\n              </label>\n              <Field id=\"name\" type=\"text\" name=\"name\" placeholder=\"Company Name\" className=\"input input-bordered w-full\" />\n              <ErrorMessage name=\"name\" component=\"div\" className=\"text-error\" />\n              <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary mt-4 btn-lg\">\n                Submit\n              </button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default NewCompanyForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}