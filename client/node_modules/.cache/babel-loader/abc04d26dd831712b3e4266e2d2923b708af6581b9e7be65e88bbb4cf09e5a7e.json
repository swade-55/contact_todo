{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageContacts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTable } from 'react-table';\nimport { fetchContacts } from './slices/contactsSlice';\nimport { fetchCompanies } from './slices/companiesSlice';\nimport '../styles/ManageContacts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageContacts = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedCompanyId, setSelectedCompanyId] = useState('');\n\n  // Retrieve companies and contacts from Redux store\n  const companies = useSelector(state => state.companies.companies);\n  const contacts = useSelector(state => state.contacts.contacts);\n  useEffect(() => {\n    dispatch(fetchCompanies());\n  }, [dispatch]);\n  useEffect(() => {\n    if (selectedCompanyId) {\n      dispatch(fetchContacts(selectedCompanyId));\n    }\n  }, [selectedCompanyId, dispatch]);\n\n  // Define columns for react-table\n  const columns = React.useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id' // accessor is the \"key\" in the data\n  }, {\n    Header: 'Name',\n    accessor: 'name'\n  }, {\n    Header: 'Last Contact Date',\n    accessor: 'last_contact_date'\n  }, {\n    Header: 'Current Status',\n    accessor: 'status'\n  }\n  // Add more columns as needed\n  ], []);\n  const instance = useTable({\n    columns,\n    data: contacts\n  });\n  const handleCompanyChange = event => {\n    setSelectedCompanyId(event.target.value);\n  };\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data: contacts\n  });\n\n  // Render the table UI using react-table's UI construction methods\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageContacts, \"dfHytp/pXpLElYe0UMmInVeCBew=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useTable, useTable];\n});\n_c = ManageContacts;\nexport default ManageContacts;\nvar _c;\n$RefreshReg$(_c, \"ManageContacts\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","useTable","fetchContacts","fetchCompanies","jsxDEV","_jsxDEV","ManageContacts","_s","dispatch","selectedCompanyId","setSelectedCompanyId","companies","state","contacts","columns","useMemo","Header","accessor","instance","data","handleCompanyChange","event","target","value","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageContacts.js"],"sourcesContent":["import React, {useState,useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTable } from 'react-table'; \nimport {fetchContacts} from './slices/contactsSlice'\nimport {fetchCompanies} from './slices/companiesSlice'\nimport '../styles/ManageContacts.css';\n\nconst ManageContacts = () => {\n    const dispatch = useDispatch();\n    const [selectedCompanyId,setSelectedCompanyId] = useState('')\n\n  // Retrieve companies and contacts from Redux store\n  const companies = useSelector(state=>state.companies.companies)\n  const contacts = useSelector((state) => state.contacts.contacts);\n\n  useEffect(()=>{\n    dispatch(fetchCompanies())\n  },[dispatch])\n\n  useEffect(()=>{\n    if (selectedCompanyId){\n        dispatch(fetchContacts(selectedCompanyId))\n    }\n  },[selectedCompanyId,dispatch])\n\n\n  // Define columns for react-table\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'ID',\n        accessor: 'id', // accessor is the \"key\" in the data\n      },\n      {\n        Header: 'Name',\n        accessor: 'name',\n      },\n      {\n        Header:'Last Contact Date',\n        accessor: 'last_contact_date'\n      },\n      {\n        Header:'Current Status',\n        accessor:'status'\n      },\n      // Add more columns as needed\n    ],\n    []\n  );\n\n  const instance = useTable({columns,data:contacts})\n\n  const handleCompanyChange = (event)=>{\n    setSelectedCompanyId(event.target.value)\n  }\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data: contacts });\n\n  // Render the table UI using react-table's UI construction methods\n  return (\n    <div className=\"container\">\n      <table {...getTableProps()} className=\"table\">\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => (\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ManageContacts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}