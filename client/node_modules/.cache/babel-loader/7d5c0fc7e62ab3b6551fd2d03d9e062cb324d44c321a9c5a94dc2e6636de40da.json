{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Redux Thunk to fetch all lists and their associated todos\nexport const fetchAllListsAndTodos = createAsyncThunk('lists/fetchAllListsAndTodos', async (_, thunkAPI) => {\n  const response = await fetch('/all-lists-todos');\n  if (!response.ok) {\n    throw new Error('Failed to fetch lists and todos');\n  }\n  const listsAndTodos = await response.json();\n  return listsAndTodos;\n});\n\n// Slice to manage lists and their associated todos\nexport const listsSlice = createSlice({\n  name: 'lists',\n  initialState: {\n    lists: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    // Add any reducers if needed\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAllListsAndTodos.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchAllListsAndTodos.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.lists = action.payload;\n    }).addCase(fetchAllListsAndTodos.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default listsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchAllListsAndTodos","_","thunkAPI","response","fetch","ok","Error","listsAndTodos","json","listsSlice","name","initialState","lists","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/slices/listsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Redux Thunk to fetch all lists and their associated todos\nexport const fetchAllListsAndTodos = createAsyncThunk(\n  'lists/fetchAllListsAndTodos',\n  async (_, thunkAPI) => {\n    const response = await fetch('/all-lists-todos');\n    if (!response.ok) {\n      throw new Error('Failed to fetch lists and todos');\n    }\n    const listsAndTodos = await response.json();\n    return listsAndTodos;\n  }\n);\n\n// Slice to manage lists and their associated todos\nexport const listsSlice = createSlice({\n  name: 'lists',\n  initialState: {\n    lists: [],\n    status: 'idle',\n    error: null,\n  },\n  reducers: {\n    // Add any reducers if needed\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchAllListsAndTodos.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchAllListsAndTodos.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.lists = action.payload;\n      })\n      .addCase(fetchAllListsAndTodos.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default listsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,qBAAqB,GAAGD,gBAAgB,CACnD,6BAA6B,EAC7B,OAAOE,CAAC,EAAEC,QAAQ,KAAK;EACrB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,CAAC;EAChD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;EACpD;EACA,MAAMC,aAAa,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC3C,OAAOD,aAAa;AACtB,CACF,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAGX,WAAW,CAAC;EACpCY,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACR;EAAA,CACD;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAClB,qBAAqB,CAACmB,OAAO,EAAGC,KAAK,IAAK;MACjDA,KAAK,CAACP,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDK,OAAO,CAAClB,qBAAqB,CAACqB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC3DF,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAAClB,qBAAqB,CAACwB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC1DF,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAehB,UAAU,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}