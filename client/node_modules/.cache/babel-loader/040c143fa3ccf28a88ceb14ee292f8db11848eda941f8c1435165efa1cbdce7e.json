{"ast":null,"code":"import React from'react';import{Formik,Form,Field,ErrorMessage}from'formik';import*as Yup from'yup';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const NewUserForm=()=>{const navigate=useNavigate();const initialValues={username:'',email:'',password:''};const handleBack=()=>{navigate('/manage-companies');};const validationSchema=Yup.object().shape({username:Yup.string().required('Username is required'),email:Yup.string().email('Invalid email').required('Email is required'),password:Yup.string().required('Password is required')});const onSubmit=(values,_ref)=>{let{setSubmitting,resetForm,setErrors}=_ref;// Construct the API endpoint\nconst apiUrl='/users';fetch(apiUrl,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(values)}).then(response=>{if(!response.ok){throw new Error('Network response was not ok');}return response.json();}).then(data=>{console.log('Success:',data);resetForm();}).catch(error=>{console.error('Error:',error);setErrors({submit:'Failed to create user'});}).finally(()=>{setSubmitting(false);});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleBack,children:\"Back to Manage Companies\"}),/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,validationSchema:validationSchema,onSubmit:onSubmit,children:_ref2=>{let{isSubmitting}=_ref2;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Field,{type:\"text\",name:\"username\",placeholder:\"Username\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"username\",component:\"div\"}),/*#__PURE__*/_jsx(Field,{type:\"email\",name:\"email\",placeholder:\"Email\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\",component:\"div\"}),/*#__PURE__*/_jsx(Field,{type:\"password\",name:\"password\",placeholder:\"Password\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"password\",component:\"div\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isSubmitting,children:\"Create User\"})]});}})]});};export default NewUserForm;","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","useNavigate","jsx","_jsx","jsxs","_jsxs","NewUserForm","navigate","initialValues","username","email","password","handleBack","validationSchema","object","shape","string","required","onSubmit","values","_ref","setSubmitting","resetForm","setErrors","apiUrl","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","console","log","catch","error","submit","finally","children","onClick","_ref2","isSubmitting","type","name","placeholder","component","disabled"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/NewUserForm.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\n\nconst NewUserForm = () => {\n  const navigate = useNavigate();\n  const initialValues = {\n    username: '',\n    email: '',\n    password: '',\n  };\n\n  const handleBack=()=>{\n    navigate('/manage-companies')\n  }\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Username is required'),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string().required('Password is required'),\n  });\n\n  const onSubmit = (values, { setSubmitting, resetForm, setErrors }) => {\n    // Construct the API endpoint\n    const apiUrl = '/users'; \n\n    fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(values),\n    })\n    .then(response => {\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n        return response.json();\n    })\n    .then(data => {\n        console.log('Success:', data);\n        resetForm();\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        setErrors({ submit: 'Failed to create user' });\n    })\n    .finally(() => {\n        setSubmitting(false);\n    });\n};\n\n\n  return (\n    <div>\n      <button onClick={handleBack}>Back to Manage Companies</button>\n    <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n      {({ isSubmitting }) => (\n        <Form>\n          <Field type=\"text\" name=\"username\" placeholder=\"Username\" />\n          <ErrorMessage name=\"username\" component=\"div\" />\n\n          <Field type=\"email\" name=\"email\" placeholder=\"Email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n\n          <Field type=\"password\" name=\"password\" placeholder=\"Password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n\n          <button type=\"submit\" disabled={isSubmitting}>\n            Create User\n          </button>\n        </Form>\n      )}\n    </Formik>\n    </div>\n  );\n};\n\nexport default NewUserForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}