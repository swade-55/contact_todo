{"ast":null,"code":"// ListsDisplay.js\nimport React from'react';import{useSelector}from'react-redux';import TodoList from'./TodoList';import{jsx as _jsx}from\"react/jsx-runtime\";const todoContainerStyle={padding:'20px',backgroundColor:'#fff',borderRadius:'8px',boxShadow:'0 4px 8px rgba(0,0,0,0.1)',margin:'20px',// Adjusted margin\noverflow:'auto',// Add this to handle overflow\nboxSizing:'border-box',// Include padding and borders in the element's total width and height\nmaxWidth:'100%'// Prevent it from exceeding the parent container\n};const listStyle={padding:'10px 20px',margin:'10px 0',cursor:'pointer',border:'1px solid #e1e1e1',// A subtle border for each item\nborderRadius:'4px',// Rounded corners for each item\nbackgroundColor:'#f9f9f9',// A light background color for each item\ntransition:'background-color 0.3s'// Smooth transition for hover effect\n};const titleStyle={fontWeight:'bold',// Makes the title bold\nfontSize:'1.2em',// Increases the font size for the title\ncolor:'#333',// Sets a darker color for better readability\nmarginBottom:'5px'// Adds spacing below the title\n};// Apply listStyle and titleStyle in the render method\nconst ListsDisplay=_ref=>{let{selectedContactId,onSelectList}=_ref;const contacts=useSelector(state=>state.contacts.contacts);const selectedContact=contacts.find(contact=>contact.id===selectedContactId);const lists=selectedContact?selectedContact.todo_lists:[];console.log(selectedContact);if(!lists||lists.length===0){return/*#__PURE__*/_jsx(\"div\",{children:\"No lists found\"});}return/*#__PURE__*/_jsx(\"div\",{style:todoContainerStyle,children:lists.map(list=>/*#__PURE__*/_jsx(\"div\",{onClick:()=>onSelectList(list),children:/*#__PURE__*/_jsx(\"h3\",{children:list.title})},list.id))});};export default ListsDisplay;","map":{"version":3,"names":["React","useSelector","TodoList","jsx","_jsx","todoContainerStyle","padding","backgroundColor","borderRadius","boxShadow","margin","overflow","boxSizing","maxWidth","listStyle","cursor","border","transition","titleStyle","fontWeight","fontSize","color","marginBottom","ListsDisplay","_ref","selectedContactId","onSelectList","contacts","state","selectedContact","find","contact","id","lists","todo_lists","console","log","length","children","style","map","list","onClick","title"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/ListsDisplay.js"],"sourcesContent":["// ListsDisplay.js\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport TodoList from './TodoList';\n\n\nconst todoContainerStyle = {\n  padding: '20px',\n  backgroundColor: '#fff',\n  borderRadius: '8px',\n  boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n  margin: '20px', // Adjusted margin\n  overflow: 'auto', // Add this to handle overflow\n  boxSizing: 'border-box', // Include padding and borders in the element's total width and height\n  maxWidth: '100%', // Prevent it from exceeding the parent container\n};\n\nconst listStyle = {\n  padding: '10px 20px',\n  margin: '10px 0',\n  cursor: 'pointer',\n  border: '1px solid #e1e1e1', // A subtle border for each item\n  borderRadius: '4px', // Rounded corners for each item\n  backgroundColor: '#f9f9f9', // A light background color for each item\n  transition: 'background-color 0.3s', // Smooth transition for hover effect\n};\n\nconst titleStyle = {\n  fontWeight: 'bold', // Makes the title bold\n  fontSize: '1.2em', // Increases the font size for the title\n  color: '#333', // Sets a darker color for better readability\n  marginBottom: '5px', // Adds spacing below the title\n};\n\n// Apply listStyle and titleStyle in the render method\n\n\nconst ListsDisplay = ({ selectedContactId, onSelectList }) => {\n  const contacts = useSelector((state) => state.contacts.contacts);\n  const selectedContact = contacts.find(contact => contact.id === selectedContactId);\n  const lists = selectedContact ? selectedContact.todo_lists : [];\n  console.log(selectedContact);\n\n  if (!lists || lists.length === 0) {\n    return <div>No lists found</div>;\n  }\n\n  return (\n    <div style={todoContainerStyle}>\n      {lists.map((list) =>\n        <div key={list.id} onClick={() => onSelectList(list)}>\n          <h3>{list.title}</h3>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ListsDisplay;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,aAAa,CACzC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAGlC,KAAM,CAAAC,kBAAkB,CAAG,CACzBC,OAAO,CAAE,MAAM,CACfC,eAAe,CAAE,MAAM,CACvBC,YAAY,CAAE,KAAK,CACnBC,SAAS,CAAE,2BAA2B,CACtCC,MAAM,CAAE,MAAM,CAAE;AAChBC,QAAQ,CAAE,MAAM,CAAE;AAClBC,SAAS,CAAE,YAAY,CAAE;AACzBC,QAAQ,CAAE,MAAQ;AACpB,CAAC,CAED,KAAM,CAAAC,SAAS,CAAG,CAChBR,OAAO,CAAE,WAAW,CACpBI,MAAM,CAAE,QAAQ,CAChBK,MAAM,CAAE,SAAS,CACjBC,MAAM,CAAE,mBAAmB,CAAE;AAC7BR,YAAY,CAAE,KAAK,CAAE;AACrBD,eAAe,CAAE,SAAS,CAAE;AAC5BU,UAAU,CAAE,uBAAyB;AACvC,CAAC,CAED,KAAM,CAAAC,UAAU,CAAG,CACjBC,UAAU,CAAE,MAAM,CAAE;AACpBC,QAAQ,CAAE,OAAO,CAAE;AACnBC,KAAK,CAAE,MAAM,CAAE;AACfC,YAAY,CAAE,KAAO;AACvB,CAAC,CAED;AAGA,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAyC,IAAxC,CAAEC,iBAAiB,CAAEC,YAAa,CAAC,CAAAF,IAAA,CACvD,KAAM,CAAAG,QAAQ,CAAG1B,WAAW,CAAE2B,KAAK,EAAKA,KAAK,CAACD,QAAQ,CAACA,QAAQ,CAAC,CAChE,KAAM,CAAAE,eAAe,CAAGF,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAIA,OAAO,CAACC,EAAE,GAAKP,iBAAiB,CAAC,CAClF,KAAM,CAAAQ,KAAK,CAAGJ,eAAe,CAAGA,eAAe,CAACK,UAAU,CAAG,EAAE,CAC/DC,OAAO,CAACC,GAAG,CAACP,eAAe,CAAC,CAE5B,GAAI,CAACI,KAAK,EAAIA,KAAK,CAACI,MAAM,GAAK,CAAC,CAAE,CAChC,mBAAOjC,IAAA,QAAAkC,QAAA,CAAK,gBAAc,CAAK,CAAC,CAClC,CAEA,mBACElC,IAAA,QAAKmC,KAAK,CAAElC,kBAAmB,CAAAiC,QAAA,CAC5BL,KAAK,CAACO,GAAG,CAAEC,IAAI,eACdrC,IAAA,QAAmBsC,OAAO,CAAEA,CAAA,GAAMhB,YAAY,CAACe,IAAI,CAAE,CAAAH,QAAA,cACnDlC,IAAA,OAAAkC,QAAA,CAAKG,IAAI,CAACE,KAAK,CAAK,CAAC,EADbF,IAAI,CAACT,EAEV,CACP,CAAC,CACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}