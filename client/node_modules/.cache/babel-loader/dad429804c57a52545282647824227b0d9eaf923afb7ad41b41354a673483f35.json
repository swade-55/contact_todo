{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/NewTodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTodo } from './slices/listsSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchAllTags } from './slices/tagsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewToDoForm = ({}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const [listId, setListId] = useState('');\n  const dispatch = useDispatch();\n  const [selectedTags, setSelectedTags] = useState([]);\n  const tags = useSelector(state => state.tags.tags);\n  const navigate = useNavigate();\n  const lists = useSelector(state => Object.values(state.lists.listsByContact).flat());\n  console.log(lists);\n  useEffect(() => {\n    dispatch(fetchAllTags());\n  }, [dispatch]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addTodo({\n      title,\n      description,\n      list_id: parseInt(listId, 10),\n      completed,\n      due_date: dueDate ? new Date(dueDate).toISOString() : null,\n      tags: selectedTags\n    }));\n    setTitle('');\n    setDescription('');\n    setDueDate('');\n    setCompleted(false);\n    setListId('');\n    setSelectedTags([]);\n  };\n  const handleBack = () => {\n    navigate('/manage-todo');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      children: \"Back to Manage Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Todo title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Todo description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value),\n        placeholder: \"Due date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Completed:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: completed,\n          onChange: e => setCompleted(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: listId,\n          onChange: e => setListId(e.target.value),\n          placeholder: \"List ID\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          multiple: true,\n          value: selectedTags,\n          onChange: e => setSelectedTags([...e.target.selectedOptions].map(o => o.value)),\n          required: true,\n          children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tag.id,\n            children: tag.name\n          }, tag.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          as: \"select\",\n          name: \"company_id\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), Object.values(listsByContact).flat().map(list => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: list.id,\n            children: list.name\n          }, list.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(NewToDoForm, \"W+hKTjSFR7ZkuH9BI/KbPEHlPe0=\", false, function () {\n  return [useDispatch, useSelector, useNavigate, useSelector];\n});\n_c = NewToDoForm;\nexport default NewToDoForm;\nvar _c;\n$RefreshReg$(_c, \"NewToDoForm\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","addTodo","useNavigate","fetchAllTags","jsxDEV","_jsxDEV","NewToDoForm","_s","title","setTitle","description","setDescription","dueDate","setDueDate","completed","setCompleted","listId","setListId","dispatch","selectedTags","setSelectedTags","tags","state","navigate","lists","Object","values","listsByContact","flat","console","log","handleSubmit","e","preventDefault","list_id","parseInt","due_date","Date","toISOString","handleBack","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","checked","multiple","selectedOptions","map","o","tag","id","name","as","list","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/NewTodoForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTodo } from './slices/listsSlice';\nimport {useNavigate} from 'react-router-dom'\nimport {fetchAllTags} from './slices/tagsSlice'\n\nconst NewToDoForm = ({}) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const [listId,setListId] = useState('');\n  const dispatch = useDispatch();\n  const [selectedTags,setSelectedTags] = useState([])\n  const tags = useSelector(state=>state.tags.tags);\n  const navigate = useNavigate();\n  \n  const lists = useSelector(state => Object.values(state.lists.listsByContact).flat());\n\n  console.log(lists)\n  useEffect(() => {\n    dispatch(fetchAllTags());\n  }, [dispatch]);\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTodo({\n      title,\n      description,\n      list_id: parseInt(listId,10), \n      completed,\n      due_date: dueDate ? new Date(dueDate).toISOString() : null, \n      tags:selectedTags,\n    }));\n    setTitle('');\n    setDescription('');\n    setDueDate('');\n    setCompleted(false);\n    setListId('');\n    setSelectedTags([]);\n  };\n\n  const handleBack = ()=>{\n    navigate('/manage-todo')\n  }\n\n  return (\n    <div>\n      <button onClick={handleBack}>Back to Manage Todo</button>\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Todo title\"\n        required\n      />\n      <textarea\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n        placeholder=\"Todo description\"\n      />\n      <input\n        type=\"date\"\n        value={dueDate}\n        onChange={(e) => setDueDate(e.target.value)}\n        placeholder=\"Due date\"\n      />\n      <label>\n        Completed:\n        <input\n          type=\"checkbox\"\n          checked={completed}\n          onChange={(e) => setCompleted(e.target.checked)}\n        />\n        <input\n          type=\"number\"\n          value={listId}\n          onChange={(e) => setListId(e.target.value)}\n          placeholder=\"List ID\"\n          required\n        />\n        <select\n        multiple={true}\n        value={selectedTags}\n        onChange={(e) => setSelectedTags([...e.target.selectedOptions].map(o => o.value))}\n        required>\n          {tags.map(tag=>(\n            <option key = {tag.id} value = {tag.id}>\n              {tag.name}\n            </option>\n          ))}\n          </select>\n          <select as=\"select\" name=\"company_id\">\n            <option value=\"\">Select List</option>\n            {Object.values(listsByContact).flat().map((list) => (\n              <option key={list.id} value={list.id}>\n                {list.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      <button type=\"submit\">Add Todo</button>\n    </form>\n    </div>\n  );\n};\n\nexport default NewToDoForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}