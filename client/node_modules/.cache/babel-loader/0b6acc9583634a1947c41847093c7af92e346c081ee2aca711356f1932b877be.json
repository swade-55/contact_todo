{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageCompanies.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useTable } from 'react-table'; // Import useTable from react-table\nimport '../styles/ManageCompanies.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageCompanies = () => {\n  _s();\n  // Retrieve companies from Redux store\n  const companies = useSelector(state => state.companies.companies);\n  const navigate = useNavigate();\n  const handleBack = () => {};\n\n  // Define columns for react-table\n  const columns = React.useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id' // accessor is the \"key\" in the data\n  }, {\n    Header: 'Name',\n    accessor: 'name'\n  }\n  // Add more columns as needed\n  ], []);\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data: companies\n  });\n\n  // Render the table UI using react-table's UI construction methods\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageCompanies, \"8D+dHOxbvRq8B3OUuzKqzdWwMGw=\", false, function () {\n  return [useSelector, useNavigate, useTable];\n});\n_c = ManageCompanies;\nexport default ManageCompanies;\nvar _c;\n$RefreshReg$(_c, \"ManageCompanies\");","map":{"version":3,"names":["React","useSelector","useNavigate","useTable","jsxDEV","_jsxDEV","ManageCompanies","_s","companies","state","navigate","handleBack","columns","useMemo","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","data","className","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageCompanies.js"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {useNavigate} from 'react-router-dom'\nimport { useTable } from 'react-table'; // Import useTable from react-table\nimport '../styles/ManageCompanies.css';\n\nconst ManageCompanies = () => {\n  // Retrieve companies from Redux store\n  const companies = useSelector((state) => state.companies.companies);\n  const navigate = useNavigate();\n\n  const handleBack = () => {\n    \n  }\n\n  // Define columns for react-table\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'ID',\n        accessor: 'id', // accessor is the \"key\" in the data\n      },\n      {\n        Header: 'Name',\n        accessor: 'name',\n      },\n      // Add more columns as needed\n    ],\n    []\n  );\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data: companies });\n\n  // Render the table UI using react-table's UI construction methods\n  return (\n    <div className=\"container\">\n      <table {...getTableProps()} className=\"table\">\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => (\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ManageCompanies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}