{"ast":null,"code":"import React from'react';import{useDispatch,useSelector}from'react-redux';import{Formik,Form,Field,ErrorMessage,FieldArray}from'formik';import*as Yup from'yup';import{addTodo}from'./slices/contactsSlice';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const NewToDoForm=()=>{const dispatch=useDispatch();const navigate=useNavigate();const contacts=useSelector(state=>state.contacts.contacts);const tags=useSelector(state=>state.tags.tags);function getListNames(contacts){return contacts.map(contact=>contact.todo_lists.map(list=>list.title)).flat();}const listNames=getListNames(contacts);const todoSchema=Yup.object().shape({title:Yup.string().required('Title is required').min(3,'Title must be at least 3 characters long'),description:Yup.string(),dueDate:Yup.date().nullable(),completed:Yup.boolean(),listId:Yup.number().required('List ID is required').positive('List ID must be a positive number').integer('List ID must be an integer'),selectedTags:Yup.array(Yup.number()).required('At least one tag is required')});const handleSubmit=values=>{const todo={...values,list_id:parseInt(values.listId,10),due_date:values.dueDate?new Date(values.dueDate).toISOString():null,tags:values.selectedTags};dispatch(addTodo(todo));};const handleBack=()=>{navigate('/manage-todo');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleBack,children:\"Back to Manage Todo\"}),/*#__PURE__*/_jsx(Formik,{initialValues:{title:'',description:'',dueDate:'',completed:false,listId:'',selectedTags:[]},validationSchema:todoSchema,onSubmit:handleSubmit,children:_ref=>{let{values,setFieldValue}=_ref;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Field,{type:\"text\",name:\"title\",placeholder:\"Todo title\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"title\",component:\"div\"}),/*#__PURE__*/_jsx(Field,{as:\"textarea\",name:\"description\",placeholder:\"Todo description\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"description\",component:\"div\"}),/*#__PURE__*/_jsx(Field,{type:\"date\",name:\"dueDate\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"dueDate\",component:\"div\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Completed:\",/*#__PURE__*/_jsx(Field,{type:\"checkbox\",name:\"completed\"})]}),/*#__PURE__*/_jsxs(Field,{as:\"select\",name:\"listId\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select List\"}),listNames.map((listName,index)=>/*#__PURE__*/_jsx(\"option\",{value:listName,children:listName},index))]}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"listId\",component:\"div\"}),/*#__PURE__*/_jsx(FieldArray,{name:\"selectedTags\",render:arrayHelpers=>/*#__PURE__*/_jsx(\"select\",{multiple:true,value:values.selectedTags,onChange:e=>{const options=e.target.options;const value=[];for(let i=0,l=options.length;i<l;i++){if(options[i].selected){value.push(options[i].value);}}setFieldValue(\"selectedTags\",value);},required:true,children:tags.map(tag=>/*#__PURE__*/_jsx(\"option\",{value:tag.id,children:tag.name},tag.id))})}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"selectedTags\",component:\"div\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Todo\"})]});}})]});};export default NewToDoForm;","map":{"version":3,"names":["React","useDispatch","useSelector","Formik","Form","Field","ErrorMessage","FieldArray","Yup","addTodo","useNavigate","jsx","_jsx","jsxs","_jsxs","NewToDoForm","dispatch","navigate","contacts","state","tags","getListNames","map","contact","todo_lists","list","title","flat","listNames","todoSchema","object","shape","string","required","min","description","dueDate","date","nullable","completed","boolean","listId","number","positive","integer","selectedTags","array","handleSubmit","values","todo","list_id","parseInt","due_date","Date","toISOString","handleBack","children","onClick","initialValues","validationSchema","onSubmit","_ref","setFieldValue","type","name","placeholder","component","as","value","listName","index","render","arrayHelpers","multiple","onChange","e","options","target","i","l","length","selected","push","tag","id"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/NewTodoForm.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage, FieldArray } from 'formik';\nimport * as Yup from 'yup';\nimport { addTodo } from './slices/contactsSlice';\nimport { useNavigate } from 'react-router-dom';\n\nconst NewToDoForm = () => {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const contacts = useSelector(state=>state.contacts.contacts)\n  const tags = useSelector(state => state.tags.tags);\n\n  function getListNames(contacts) {\n    return contacts.map(contact => \n      contact.todo_lists.map(list => \n        list.title \n      )\n    ).flat(); \n  }\n  \n  const listNames = getListNames(contacts);\n\n  const todoSchema = Yup.object().shape({\n    title: Yup.string()\n      .required('Title is required')\n      .min(3, 'Title must be at least 3 characters long'),\n    description: Yup.string(),\n    dueDate: Yup.date().nullable(),\n    completed: Yup.boolean(),\n    listId: Yup.number()\n      .required('List ID is required')\n      .positive('List ID must be a positive number')\n      .integer('List ID must be an integer'),\n    selectedTags: Yup.array(Yup.number()).required('At least one tag is required'),\n  });\n\n  const handleSubmit = (values) => {\n    const todo = {\n      ...values,\n      list_id: parseInt(values.listId, 10),\n      due_date: values.dueDate ? new Date(values.dueDate).toISOString() : null,\n      tags: values.selectedTags,\n    };\n    dispatch(addTodo(todo));\n  };\n\n  const handleBack = () => {\n    navigate('/manage-todo');\n  };\n\n  return (\n    <div>\n      <button onClick={handleBack}>Back to Manage Todo</button>\n      <Formik\n        initialValues={{\n          title: '',\n          description: '',\n          dueDate: '',\n          completed: false,\n          listId: '',\n          selectedTags: [],\n        }}\n        validationSchema={todoSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, setFieldValue }) => (\n          <Form>\n            <Field type=\"text\" name=\"title\" placeholder=\"Todo title\" />\n            <ErrorMessage name=\"title\" component=\"div\" />\n\n            <Field as=\"textarea\" name=\"description\" placeholder=\"Todo description\" />\n            <ErrorMessage name=\"description\" component=\"div\" />\n\n            <Field type=\"date\" name=\"dueDate\" />\n            <ErrorMessage name=\"dueDate\" component=\"div\" />\n\n            <label>\n              Completed:\n              <Field type=\"checkbox\" name=\"completed\" />\n            </label>\n            <Field as=\"select\" name=\"listId\">\n              <option value=\"\">Select List</option>\n              {listNames.map((listName, index) => (\n                <option key={index} value={listName}>\n                  {listName}\n                </option>\n              ))}\n            </Field>\n            <ErrorMessage name=\"listId\" component=\"div\" />\n\n            <FieldArray\n              name=\"selectedTags\"\n              render={arrayHelpers => (\n                <select\n                  multiple={true}\n                  value={values.selectedTags}\n                  onChange={e => {\n                    const options = e.target.options;\n                    const value = [];\n                    for (let i = 0, l = options.length; i < l; i++) {\n                      if (options[i].selected) {\n                        value.push(options[i].value);\n                      }\n                    }\n                    setFieldValue(\"selectedTags\", value);\n                  }}\n                  required\n                >\n                  {tags.map(tag => (\n                    <option key={tag.id} value={tag.id}>\n                      {tag.name}\n                    </option>\n                  ))}\n                </select>\n              )}\n            />\n            <ErrorMessage name=\"selectedTags\" component=\"div\" />\n\n            <button type=\"submit\">Add Todo</button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NewToDoForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}