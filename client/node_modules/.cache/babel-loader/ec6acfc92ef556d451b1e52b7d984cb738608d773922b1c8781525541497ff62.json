{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/NewCompanyForm.js\",\n  _s = $RefreshSig$();\n// NewCompanyForm.jsx\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addCompany, fetchCompanies } from './slices/companiesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCompanyForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const initialValues = {\n    name: '',\n    manager_id: ''\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Company name is required'),\n    manager_id: Yup.number().required('Manager ID is required').positive().integer()\n  });\n  const onSubmit = (values, {\n    setSubmitting\n  }) => {\n    dispatch(addCompany(values)).unwrap().then(newCompany => {\n      // Handle success - maybe redirect to company list or show a success message\n      // No need to fetch all companies if the state is already updated\n      // navigate('/company-list'); // Redirect to the list of companies or wherever appropriate\n    }).catch(error => {\n      // Handle error - show an error message\n      console.error('Failed to add company:', error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  };\n  const handleBack = () => {\n    navigate('/manage-companies');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      children: \"Back to Manage Companies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add New Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Company Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"number\",\n          name: \"manager_id\",\n          placeholder: \"Manager ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"manager_id\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCompanyForm, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = NewCompanyForm;\nexport default NewCompanyForm;\nvar _c;\n$RefreshReg$(_c, \"NewCompanyForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","useNavigate","Yup","useDispatch","addCompany","fetchCompanies","jsxDEV","_jsxDEV","NewCompanyForm","_s","navigate","dispatch","initialValues","name","manager_id","validationSchema","object","shape","string","required","number","positive","integer","onSubmit","values","setSubmitting","unwrap","then","newCompany","catch","error","console","finally","handleBack","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isSubmitting","type","placeholder","component","disabled","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/NewCompanyForm.js"],"sourcesContent":["// NewCompanyForm.jsx\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addCompany,fetchCompanies } from './slices/companiesSlice'; \n\nconst NewCompanyForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name: '',\n    manager_id: '', \n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Company name is required'),\n    manager_id: Yup.number().required('Manager ID is required').positive().integer(),\n  });\n\n  const onSubmit = (values, { setSubmitting }) => {\n    dispatch(addCompany(values))\n      .unwrap()\n      .then((newCompany) => {\n        // Handle success - maybe redirect to company list or show a success message\n        // No need to fetch all companies if the state is already updated\n        // navigate('/company-list'); // Redirect to the list of companies or wherever appropriate\n      })\n      .catch((error) => {\n        // Handle error - show an error message\n        console.error('Failed to add company:', error);\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n\n  const handleBack=()=>{\n    navigate('/manage-companies')\n  }\n\n  return (\n    <div>\n      <button onClick={handleBack}>Back to Manage Companies</button>\n      <h1>Add New Company</h1>\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"text\" name=\"name\" placeholder=\"Company Name\" />\n            <ErrorMessage name=\"name\" component=\"div\" />\n\n            <Field type=\"number\" name=\"manager_id\" placeholder=\"Manager ID\" />\n            <ErrorMessage name=\"manager_id\" component=\"div\" />\n\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NewCompanyForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}