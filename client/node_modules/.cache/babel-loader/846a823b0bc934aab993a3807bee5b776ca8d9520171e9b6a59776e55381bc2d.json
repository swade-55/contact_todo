{"ast":null,"code":"import React from'react';import{Formik,Form,Field,ErrorMessage}from'formik';import{useNavigate}from'react-router-dom';import*as Yup from'yup';import{useDispatch,useSelector}from'react-redux';import{addContact}from'./slices/contactsSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const NewContactForm=()=>{const navigate=useNavigate();const dispatch=useDispatch();const companies=useSelector(state=>state.companies.companies);const initialValues={name:'',status:'',company_id:'',manager_id:''};const validationSchema=Yup.object().shape({name:Yup.string().required('Contact name is required').matches(/^[A-Z][a-z]+(?: [A-Z][a-z]+)*$/,'Name must start with a capital letter and contain only letters'),status:Yup.string().required('Status is required').oneOf(['Hot','Cold','Warm'],'Invalid status selected'),company_id:Yup.number().required('Company ID is required').positive('Company ID must be positive').integer('Company ID must be an integer'),manager_id:Yup.number().required('Manager ID is required').positive('Manager ID must be positive').integer('Manager ID must be an integer')});const onSubmit=(values,_ref)=>{let{resetForm}=_ref;dispatch(addContact(values));resetForm();};const handleBack=()=>{navigate('/manage-contacts');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleBack,children:\"Back to Manage Contacts\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Add New Contact\"}),/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,validationSchema:validationSchema,onSubmit:onSubmit,children:_ref2=>{let{isSubmitting}=_ref2;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Field,{type:\"text\",name:\"name\",placeholder:\"Contact Name\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"name\",component:\"div\"}),/*#__PURE__*/_jsxs(Field,{as:\"select\",name:\"status\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Status\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Hot\",children:\"Hot\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Cold\",children:\"Cold\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Warm\",children:\"Warm\"})]}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"status\",component:\"div\"}),/*#__PURE__*/_jsx(Field,{type:\"number\",name:\"manager_id\",placeholder:\"Manager ID\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"manager_id\",component:\"div\"}),/*#__PURE__*/_jsxs(Field,{as:\"select\",name:\"company_id\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Company\"}),companies.map(company=>/*#__PURE__*/_jsx(\"option\",{value:company.id,children:company.name},company.id))]}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"company_id\",component:\"div\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isSubmitting,children:\"Submit\"})]});}})]});};export default NewContactForm;","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","useNavigate","Yup","useDispatch","useSelector","addContact","jsx","_jsx","jsxs","_jsxs","NewContactForm","navigate","dispatch","companies","state","initialValues","name","status","company_id","manager_id","validationSchema","object","shape","string","required","matches","oneOf","number","positive","integer","onSubmit","values","_ref","resetForm","handleBack","children","onClick","_ref2","isSubmitting","type","placeholder","component","as","value","map","company","id","disabled"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/NewContactForm.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from './slices/contactsSlice';\n\nconst NewContactForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const companies = useSelector((state) => state.companies.companies);\n\n  const initialValues = {\n    name: '',\n    status: '',\n    company_id: '',\n    manager_id: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Contact name is required')\n      .matches(/^[A-Z][a-z]+(?: [A-Z][a-z]+)*$/, 'Name must start with a capital letter and contain only letters'),\n    status: Yup.string()\n      .required('Status is required')\n      .oneOf(['Hot', 'Cold', 'Warm'], 'Invalid status selected'),\n    company_id: Yup.number()\n      .required('Company ID is required')\n      .positive('Company ID must be positive')\n      .integer('Company ID must be an integer'),\n    manager_id: Yup.number()\n      .required('Manager ID is required')\n      .positive('Manager ID must be positive')\n      .integer('Manager ID must be an integer'),\n  });\n\n\n  const onSubmit = (values, { resetForm }) => {\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  const handleBack = () => {\n    navigate('/manage-contacts');\n  };\n\n  return (\n    <div>\n      <button onClick={handleBack}>Back to Manage Contacts</button>\n      <h1>Add New Contact</h1>\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"text\" name=\"name\" placeholder=\"Contact Name\" />\n            <ErrorMessage name=\"name\" component=\"div\" />\n\n            <Field as=\"select\" name=\"status\">\n              <option value=\"\">Select Status</option>\n              <option value=\"Hot\">Hot</option>\n              <option value=\"Cold\">Cold</option>\n              <option value=\"Warm\">Warm</option>\n            </Field>\n            <ErrorMessage name=\"status\" component=\"div\" />\n\n            <Field type=\"number\" name=\"manager_id\" placeholder=\"Manager ID\" />\n            <ErrorMessage name=\"manager_id\" component=\"div\" />\n\n            <Field as=\"select\" name=\"company_id\">\n              <option value=\"\">Select Company</option>\n              {companies.map((company) => (\n                <option key={company.id} value={company.id}>\n                  {company.name}\n                </option>\n              ))}\n            </Field>\n            <ErrorMessage name=\"company_id\" component=\"div\" />\n\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NewContactForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}