{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const fetchToDosForList = createAsyncThunk('todos/fetchTodos', async (listId, thunkAPI) => {\n  const response = await fetch('/api/todos?listId=${listId}');\n  const todos = await response.json();\n  return todos;\n});\nexport const todosSlice = createSlice({\n  name: 'todos',\n  initialState: {\n    items: [],\n    status: 'idle',\n    error: null\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchToDosForList.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchToDosForList.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.items = action.payload;\n    }).addCase(fetchToDosForList.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default todosSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchToDosForList","listId","thunkAPI","response","fetch","todos","json","todosSlice","name","initialState","items","status","error","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/slices/todosSlice.js"],"sourcesContent":["import {createSlice,createAsyncThunk} from '@reduxjs/toolkit'\n\nexport const fetchToDosForList = createAsyncThunk(\n    'todos/fetchTodos',\n    async (listId,thunkAPI) =>{\n        const response = await fetch('/api/todos?listId=${listId}')\n        const todos = await response.json();\n        return todos;\n    }\n)\n\nexport const todosSlice = createSlice({\n    name:'todos',\n    initialState:{\n        items:[],\n        status:'idle',\n        error:null,\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchToDosForList.pending,(state)=>{\n            state.status = 'loading';\n        })\n        .addCase(fetchToDosForList.fulfilled,(state,action)=>{\n            state.status = 'succeeded'\n            state.items = action.payload;\n        })\n        .addCase(fetchToDosForList.rejected,(state,action)=>{\n            state.status='failed'\n            state.error = action.error.message\n        })\n        },\n})\n\nexport default todosSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,EAACC,gBAAgB,QAAO,kBAAkB;AAE7D,OAAO,MAAMC,iBAAiB,GAAGD,gBAAgB,CAC7C,kBAAkB,EAClB,OAAOE,MAAM,EAACC,QAAQ,KAAI;EACtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;EAC3D,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EACnC,OAAOD,KAAK;AAChB,CACJ,CAAC;AAED,OAAO,MAAME,UAAU,GAAGT,WAAW,CAAC;EAClCU,IAAI,EAAC,OAAO;EACZC,YAAY,EAAC;IACTC,KAAK,EAAC,EAAE;IACRC,MAAM,EAAC,MAAM;IACbC,KAAK,EAAC;EACV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACf,iBAAiB,CAACgB,OAAO,EAAEC,KAAK,IAAG;MAC/CA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDI,OAAO,CAACf,iBAAiB,CAACkB,SAAS,EAAC,CAACD,KAAK,EAACE,MAAM,KAAG;MACjDF,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1BM,KAAK,CAACP,KAAK,GAAGS,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDL,OAAO,CAACf,iBAAiB,CAACqB,QAAQ,EAAC,CAACJ,KAAK,EAACE,MAAM,KAAG;MAChDF,KAAK,CAACN,MAAM,GAAC,QAAQ;MACrBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACP,KAAK,CAACU,OAAO;IACtC,CAAC,CAAC;EACF;AACR,CAAC,CAAC;AAEF,eAAef,UAAU,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}