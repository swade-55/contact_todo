{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Projects/contact_todo/client/src/components/NewListForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { addList } from './slices/contactsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst newListSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Title must be at least 2 characters long').required('Title is required'),\n  contactId: Yup.number().positive('Contact ID must be a positive number').required('Contact is required').integer('Contact ID must be an integer')\n});\nconst NewListForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const contacts = useSelector(state => state.contacts.contacts);\n  const handleBack = () => {\n    navigate('/manage-todo');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card bg-base-200 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          title: '',\n          contactId: ''\n        },\n        validationSchema: newListSchema,\n        onSubmit: (values, {\n          resetForm\n        }) => {\n          dispatch(addList({\n            title: values.title,\n            contact_id: parseInt(values.contactId, 10)\n          }));\n          resetForm();\n        },\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label-text\",\n              children: \"List Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"title\",\n            placeholder: \"List Title\",\n            className: \"input input-bordered w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"title\",\n            component: \"div\",\n            className: \"text-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label-text\",\n              children: \"Select Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: \"select\",\n            name: \"contactId\",\n            className: \"select select-bordered w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), contacts.map(contact => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: contact.id,\n              children: contact.name\n            }, contact.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"contactId\",\n            component: \"div\",\n            className: \"text-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control mt-6\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting,\n              className: \"btn btn-primary btn-lg\",\n              children: \"Add List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        className: \"btn px-10 py-3 text-lg\",\n        children: \"Back to Manage Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(NewListForm, \"4Ky7nFuZqOOT1ZagkS69W2aLJWg=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = NewListForm;\nexport default NewListForm;\nvar _c;\n$RefreshReg$(_c, \"NewListForm\");","map":{"version":3,"names":["React","useDispatch","useSelector","useNavigate","Formik","Form","Field","ErrorMessage","Yup","addList","jsxDEV","_jsxDEV","newListSchema","object","shape","title","string","min","required","contactId","number","positive","integer","NewListForm","_s","dispatch","navigate","contacts","state","handleBack","className","children","initialValues","validationSchema","onSubmit","values","resetForm","contact_id","parseInt","isSubmitting","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","component","as","value","map","contact","id","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Projects/contact_todo/client/src/components/NewListForm.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { addList } from './slices/contactsSlice';\n\nconst newListSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(2, 'Title must be at least 2 characters long')\n    .required('Title is required'),\n  contactId: Yup.number()\n    .positive('Contact ID must be a positive number')\n    .required('Contact is required')\n    .integer('Contact ID must be an integer'),\n});\n\nconst NewListForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  const handleBack = () => {\n    navigate('/manage-todo');\n  };\n\n  return (\n    <div className=\"card bg-base-200 p-4\">\n      <div className=\"card-body\">\n        <Formik\n          initialValues={{ title: '', contactId: '' }}\n          validationSchema={newListSchema}\n          onSubmit={(values, { resetForm }) => {\n            dispatch(addList({\n              title: values.title,\n              contact_id: parseInt(values.contactId, 10),\n            }));\n            resetForm();\n          }}\n        >\n          {({ isSubmitting }) => (\n            <Form className=\"form-control\">\n              <label className=\"label\">\n                <span className=\"label-text\">List Title</span>\n              </label>\n              <Field type=\"text\" name=\"title\" placeholder=\"List Title\" className=\"input input-bordered w-full\" />\n              <ErrorMessage name=\"title\" component=\"div\" className=\"text-error\" />\n\n              <label className=\"label\">\n                <span className=\"label-text\">Select Contact</span>\n              </label>\n              <Field as=\"select\" name=\"contactId\" className=\"select select-bordered w-full\">\n                <option value=\"\">Select Contact</option>\n                {contacts.map(contact => (\n                  <option key={contact.id} value={contact.id}>\n                    {contact.name}\n                  </option>\n                ))}\n              </Field>\n              <ErrorMessage name=\"contactId\" component=\"div\" className=\"text-error\" />\n\n              <div className=\"form-control mt-6\">\n                <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary btn-lg\">\n                  Add List\n                </button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n        <button onClick={handleBack} className=\"btn px-10 py-3 text-lg\">\n          Back to Manage Todo\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NewListForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}