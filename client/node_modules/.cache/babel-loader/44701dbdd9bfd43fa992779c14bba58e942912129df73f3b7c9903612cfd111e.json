{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageToDo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllContacts } from './slices/contactsSlice';\nimport ContactListsSidebar from './ContactListsSidebar';\nimport ListsDisplay from './ListsDisplay'; // New import for the ListsDisplay component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageToDo = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedContactId, setSelectedContactId] = useState(null);\n  const contacts = useSelector(state => state.contacts.contacts);\n  useEffect(() => {\n    fetchContactId().then(id => setContactId(id));\n  }, []);\n  if (contactId === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  const handleContactSelect = contactId => {\n    console.log(`Contact selected with ID: ${contactId}`);\n    setSelectedContactId(contactId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '250px'\n      },\n      children: /*#__PURE__*/_jsxDEV(ContactListsSidebar, {\n        onContactSelect: handleContactSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1,\n        padding: '0 20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(ListsDisplay, {\n        contactId: contactId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageToDo, \"cDA1w56/i2a9wEvwbsaKhPHbfwY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ManageToDo;\nexport default ManageToDo;\nvar _c;\n$RefreshReg$(_c, \"ManageToDo\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","fetchAllContacts","ContactListsSidebar","ListsDisplay","jsxDEV","_jsxDEV","ManageToDo","_s","dispatch","selectedContactId","setSelectedContactId","contacts","state","fetchContactId","then","id","setContactId","contactId","children","fileName","_jsxFileName","lineNumber","columnNumber","handleContactSelect","console","log","style","display","width","onContactSelect","flexGrow","padding","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageToDo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllContacts } from './slices/contactsSlice';\nimport ContactListsSidebar from './ContactListsSidebar';\nimport ListsDisplay from './ListsDisplay'; // New import for the ListsDisplay component\n\nconst ManageToDo = () => {\n  const dispatch = useDispatch();\n  const [selectedContactId, setSelectedContactId] = useState(null);\n  const contacts = useSelector((state) => state.contacts.contacts);\n\n  useEffect(() => {\n    fetchContactId().then((id) => setContactId(id));\n  }, []);\n\n  if (contactId === null) {\n    return <div>Loading...</div>;\n  }\n\n  const handleContactSelect = (contactId) => {\n    console.log(`Contact selected with ID: ${contactId}`);\n    setSelectedContactId(contactId);\n  };\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ width: '250px' }}>\n        <ContactListsSidebar onContactSelect={handleContactSelect} />\n      </div>\n      <div style={{ flexGrow: 1, padding: '0 20px' }}>\n        <ListsDisplay contactId={contactId} />\n      </div>\n    </div>\n  );\n};\n\nexport default ManageToDo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAMc,QAAQ,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACD,QAAQ,CAACA,QAAQ,CAAC;EAEhEb,SAAS,CAAC,MAAM;IACde,cAAc,CAAC,CAAC,CAACC,IAAI,CAAEC,EAAE,IAAKC,YAAY,CAACD,EAAE,CAAC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIE,SAAS,KAAK,IAAI,EAAE;IACtB,oBAAOZ,OAAA;MAAAa,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,MAAMC,mBAAmB,GAAIN,SAAS,IAAK;IACzCO,OAAO,CAACC,GAAG,CAAE,6BAA4BR,SAAU,EAAC,CAAC;IACrDP,oBAAoB,CAACO,SAAS,CAAC;EACjC,CAAC;EAED,oBACEZ,OAAA;IAAKqB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAT,QAAA,gBAC9Bb,OAAA;MAAKqB,KAAK,EAAE;QAAEE,KAAK,EAAE;MAAQ,CAAE;MAAAV,QAAA,eAC7Bb,OAAA,CAACH,mBAAmB;QAAC2B,eAAe,EAAEN;MAAoB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACNjB,OAAA;MAAKqB,KAAK,EAAE;QAAEI,QAAQ,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAS,CAAE;MAAAb,QAAA,eAC7Cb,OAAA,CAACF,YAAY;QAACc,SAAS,EAAEA;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA5BID,UAAU;EAAA,QACGN,WAAW,EAEXD,WAAW;AAAA;AAAAiC,EAAA,GAHxB1B,UAAU;AA8BhB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}