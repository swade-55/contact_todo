{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/NewTagForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addTag } from './slices/tagsSlice';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTagForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // Define the validation schema using Yup\n  const tagSchema = Yup.object().shape({\n    tagName: Yup.string().required('Tag name is required').min(2, 'Tag name must be at least 2 characters long')\n    // Example of a string format validation: must not contain numbers\n    .matches(/^[A-Za-z ]*$/, 'Tag name must not contain numbers or special characters').max(50, 'Tag name must not exceed 50 characters') // Data type and format validation\n  });\n  const handleBack = () => {\n    navigate('/manage-todo');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      children: \"Back to Manage Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        tagName: ''\n      },\n      validationSchema: tagSchema,\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        dispatch(addTag({\n          name: values.tagName\n        }));\n        resetForm();\n        setSubmitting(false);\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"tagName\",\n          placeholder: \"Tag Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"tagName\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Add Tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTagForm, \"R1L93MxeLXzQXESpmjjjQSuQgvM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = NewTagForm;\nexport default NewTagForm;\nvar _c;\n$RefreshReg$(_c, \"NewTagForm\");","map":{"version":3,"names":["React","useDispatch","useNavigate","addTag","Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","NewTagForm","_s","dispatch","navigate","tagSchema","object","shape","tagName","string","required","min","matches","max","handleBack","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","validationSchema","onSubmit","values","setSubmitting","resetForm","name","isSubmitting","type","placeholder","component","disabled","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/NewTagForm.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addTag } from './slices/tagsSlice';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst NewTagForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // Define the validation schema using Yup\n  const tagSchema = Yup.object().shape({\n    tagName: Yup.string()\n      .required('Tag name is required')\n      .min(2, 'Tag name must be at least 2 characters long')\n      // Example of a string format validation: must not contain numbers\n      .matches(/^[A-Za-z ]*$/, 'Tag name must not contain numbers or special characters')\n      .max(50, 'Tag name must not exceed 50 characters'), // Data type and format validation\n  });\n\n  const handleBack = () => {\n    navigate('/manage-todo');\n  };\n\n  return (\n    <div>\n      <button onClick={handleBack}>Back to Manage Todo</button>\n      <Formik\n        initialValues={{ tagName: '' }}\n        validationSchema={tagSchema}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          dispatch(addTag({ name: values.tagName }));\n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"text\" name=\"tagName\" placeholder=\"Tag Name\" />\n            <ErrorMessage name=\"tagName\" component=\"div\" />\n            <button type=\"submit\" disabled={isSubmitting}>\n              Add Tag\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NewTagForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMa,SAAS,GAAGP,GAAG,CAACQ,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IACnCC,OAAO,EAAEV,GAAG,CAACW,MAAM,CAAC,CAAC,CAClBC,QAAQ,CAAC,sBAAsB,CAAC,CAChCC,GAAG,CAAC,CAAC,EAAE,6CAA6C;IACrD;IAAA,CACCC,OAAO,CAAC,cAAc,EAAE,yDAAyD,CAAC,CAClFC,GAAG,CAAC,EAAE,EAAE,wCAAwC,CAAC,CAAE;EACxD,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBV,QAAQ,CAAC,cAAc,CAAC;EAC1B,CAAC;EAED,oBACEJ,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAQgB,OAAO,EAAEF,UAAW;MAAAC,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzDpB,OAAA,CAACN,MAAM;MACL2B,aAAa,EAAE;QAAEb,OAAO,EAAE;MAAG,CAAE;MAC/Bc,gBAAgB,EAAEjB,SAAU;MAC5BkB,QAAQ,EAAEA,CAACC,MAAM,EAAE;QAAEC,aAAa;QAAEC;MAAU,CAAC,KAAK;QAClDvB,QAAQ,CAACV,MAAM,CAAC;UAAEkC,IAAI,EAAEH,MAAM,CAAChB;QAAQ,CAAC,CAAC,CAAC;QAC1CkB,SAAS,CAAC,CAAC;QACXD,aAAa,CAAC,KAAK,CAAC;MACtB,CAAE;MAAAV,QAAA,EAEDA,CAAC;QAAEa;MAAa,CAAC,kBAChB5B,OAAA,CAACL,IAAI;QAAAoB,QAAA,gBACHf,OAAA,CAACJ,KAAK;UAACiC,IAAI,EAAC,MAAM;UAACF,IAAI,EAAC,SAAS;UAACG,WAAW,EAAC;QAAU;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3DpB,OAAA,CAACH,YAAY;UAAC8B,IAAI,EAAC,SAAS;UAACI,SAAS,EAAC;QAAK;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/CpB,OAAA;UAAQ6B,IAAI,EAAC,QAAQ;UAACG,QAAQ,EAAEJ,YAAa;UAAAb,QAAA,EAAC;QAE9C;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAClB,EAAA,CA1CID,UAAU;EAAA,QACGV,WAAW,EACXC,WAAW;AAAA;AAAAyC,EAAA,GAFxBhC,UAAU;AA4ChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}