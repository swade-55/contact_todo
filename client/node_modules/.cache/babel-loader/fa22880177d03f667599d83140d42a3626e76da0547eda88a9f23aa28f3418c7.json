{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/ManageCompanies.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useTable } from 'react-table';\nimport '../styles/ManageCompanies.css';\nimport { updateCompany, fetchCompanies, deleteCompany } from './slices/companiesSlice';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageCompanies = () => {\n  _s();\n  const companies = useSelector(state => state.companies.companies);\n  const navigate = useNavigate();\n  const [editRowId, setEditRowId] = useState(null);\n  const [editFormData, setEditFormData] = useState({\n    name: '',\n    id: null\n  });\n  const dispatch = useDispatch();\n  const handleBack = () => {\n    navigate('/');\n  };\n  const handleAddCompanyClick = () => {\n    navigate('/add-company');\n  };\n  const handleAddUserClick = () => {\n    navigate('/add-user');\n  };\n\n  // const handleEditClick = (company, e) => {\n  //   e.preventDefault();\n  //   setEditRowId(company.id);\n  //   setEditFormData({ name: company.name, id: company.id });\n  // };\n\n  const handleCancelClick = () => {\n    setEditRowId(null);\n  };\n  const handleSaveClick = () => {\n    dispatch(updateCompany(editFormData)).catch(error => {\n      console.error('Update failed', error);\n    });\n    setEditRowId(null);\n  };\n  const handleFormChange = e => {\n    setEditFormData({\n      ...editFormData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleDeleteClick = companyId => {\n    if (window.confirm('Are you sure you want to delete this company?')) {\n      dispatch(deleteCompany(companyId)).then(() => {\n        dispatch(fetchCompanies());\n      }).catch(error => {\n        console.error('Delete failed', error);\n      });\n    }\n  };\n  const columns = React.useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id'\n  }, {\n    Header: 'Manager ID',\n    accessor: 'manager_id'\n  }, {\n    Header: 'Name',\n    accessor: 'name',\n    Cell: ({\n      row\n    }) => {\n      if (editRowId === row.original.id) {\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: editFormData.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: row.original.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 20\n        }, this);\n      }\n    }\n  }, {\n    Header: 'Actions',\n    Cell: ({\n      row\n    }) => {\n      return editRowId === row.original.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveClick,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelClick,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteClick(row.original.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handleEditClick(row.original, e),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this);\n    }\n  }], [editRowId, editFormData]);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data: Array.isArray(companies) ? companies : [companies]\n  });\n  console.log(companies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddCompanyClick,\n      children: \"Add New Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddUserClick,\n      children: \"Add New User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      children: \"Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n_s(ManageCompanies, \"PIcTNdKOzanfpdfFEnf8W3AQpYk=\", false, function () {\n  return [useSelector, useNavigate, useDispatch, useTable];\n});\n_c = ManageCompanies;\nexport default ManageCompanies;\nvar _c;\n$RefreshReg$(_c, \"ManageCompanies\");","map":{"version":3,"names":["React","useState","useSelector","useNavigate","useTable","updateCompany","fetchCompanies","deleteCompany","useDispatch","jsxDEV","_jsxDEV","ManageCompanies","_s","companies","state","navigate","editRowId","setEditRowId","editFormData","setEditFormData","name","id","dispatch","handleBack","handleAddCompanyClick","handleAddUserClick","handleCancelClick","handleSaveClick","catch","error","console","handleFormChange","e","target","value","handleDeleteClick","companyId","window","confirm","then","columns","useMemo","Header","accessor","Cell","row","original","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","handleEditClick","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","data","Array","isArray","log","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/ManageCompanies.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { useSelector } from 'react-redux';\nimport {useNavigate} from 'react-router-dom'\nimport { useTable } from 'react-table'; \nimport '../styles/ManageCompanies.css';\nimport { updateCompany,fetchCompanies,deleteCompany } from './slices/companiesSlice';\nimport {useDispatch} from 'react-redux'\n\nconst ManageCompanies = () => {\n  const companies = useSelector((state) => state.companies.companies);\n  const navigate = useNavigate();\n  const [editRowId, setEditRowId] = useState(null)\n  const [editFormData,setEditFormData] = useState({name:'',id:null})\n  const dispatch = useDispatch();\n\n\n  const handleBack = () => {\n    navigate('/')\n  }\n\n  const handleAddCompanyClick = ()=>{\n    navigate('/add-company')\n  }\n  const handleAddUserClick = ()=>{\n    navigate('/add-user')\n  }\n\n  // const handleEditClick = (company, e) => {\n  //   e.preventDefault();\n  //   setEditRowId(company.id);\n  //   setEditFormData({ name: company.name, id: company.id });\n  // };\n\n  const handleCancelClick = ()=>{\n    setEditRowId(null)\n  }\n\n  const handleSaveClick = () => {\n    dispatch(updateCompany(editFormData))\n      .catch((error) => {\n        console.error('Update failed', error);\n      });\n    setEditRowId(null);\n  };\n\n  const handleFormChange = (e) =>{\n    setEditFormData({...editFormData, [e.target.name]:e.target.value})\n\n  }\n\n  const handleDeleteClick = (companyId) => {\n    if (window.confirm('Are you sure you want to delete this company?')) {\n      dispatch(deleteCompany(companyId))\n        .then(() => {\n          dispatch(fetchCompanies());\n        })\n        .catch((error) => {\n          console.error('Delete failed', error);\n        });\n    }\n  };\n \n\n\n  \n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'ID',\n        accessor: 'id',\n      },\n      {\n        Header: 'Manager ID',\n        accessor: 'manager_id', \n      },\n      {\n        Header: 'Name',\n        accessor: 'name',\n        Cell: ({ row }) => {\n          if (editRowId === row.original.id) {\n            return (\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={editFormData.name}\n                onChange={handleFormChange}\n              />\n            );\n          } else {\n            return <span>{row.original.name}</span>;\n          }\n        },\n      },\n          {\n            Header: 'Actions',\n            Cell: ({ row }) => {\n              return editRowId === row.original.id ? (\n                <div>\n              <button onClick={handleSaveClick}>Save</button>\n              <button onClick={handleCancelClick}>Cancel</button>\n              <button onClick={() => handleDeleteClick(row.original.id)}>Delete</button>\n            </div>\n          ) : (\n            <button onClick={(e) => handleEditClick(row.original, e)}>Edit</button>\n            );\n          },\n        },\n      ],\n      [editRowId, editFormData]\n      );\n      \n      const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({ columns, data: Array.isArray(companies) ? companies : [companies] });\n\n      console.log(companies);\n\n\n      return (\n        <div className=\"container\">\n      <button onClick={handleAddCompanyClick}>Add New Company</button>\n      <button onClick={handleAddUserClick}>Add New User</button>\n      <button onClick={handleBack}>Back to Home</button>\n      <table {...getTableProps()} className=\"table\">\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => (\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ManageCompanies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}