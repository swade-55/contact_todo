{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Projects/contact_todo/client/src/components/ManageCompanies.js\",\n  _s = $RefreshSig$();\n// ManageCompanies.js\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { updateCompany, deleteCompany } from './slices/companiesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageCompanies = () => {\n  _s();\n  const companies = useSelector(state => state.companies.companies);\n  const dispatch = useDispatch();\n  const [editRowId, setEditRowId] = useState(null);\n  const companySchema = Yup.object().shape({\n    name: Yup.string().required('Name is required').min(2, 'Name must be at least 2 characters').max(50, 'Name must not exceed 50 characters')\n  });\n  const handleEditSave = (values, companyId) => {\n    dispatch(updateCompany({\n      id: companyId,\n      ...values\n    })).then(() => setEditRowId(null)).catch(error => {\n      console.error('Update failed', error);\n    });\n  };\n  const handleDeleteClick = companyId => {\n    if (window.confirm('Are you sure you want to delete this company?')) {\n      dispatch(deleteCompany(companyId));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-6xl font-bold mb-6 text-center\",\n      children: \"Manage Companies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table w-full text-4xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: companies.map(company => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: company.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editRowId === company.id ? /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: {\n                  name: company.name\n                },\n                validationSchema: companySchema,\n                onSubmit: values => handleEditSave(values, company.id),\n                enableReinitialize: true // Add this if initial values can change\n                ,\n                children: ({\n                  isSubmitting\n                }) => /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: \"name\",\n                    as: \"input\",\n                    className: \"input input-bordered w-full max-w-xs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    disabled: isSubmitting,\n                    className: \"btn btn-success\",\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => setEditRowId(null),\n                    className: \"btn btn-error\",\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this) : company.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEditRowId(company.id),\n                className: \"btn btn-accent\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteClick(company.id),\n                className: \"btn btn-error\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, company.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageCompanies, \"sovGbSM0dO9W3OWsDPGdwA//0ZQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = ManageCompanies;\nexport default ManageCompanies;\nvar _c;\n$RefreshReg$(_c, \"ManageCompanies\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","useNavigate","Formik","Form","Field","Yup","updateCompany","deleteCompany","jsxDEV","_jsxDEV","ManageCompanies","_s","companies","state","dispatch","editRowId","setEditRowId","companySchema","object","shape","name","string","required","min","max","handleEditSave","values","companyId","id","then","catch","error","console","handleDeleteClick","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","company","initialValues","validationSchema","onSubmit","enableReinitialize","isSubmitting","as","type","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Projects/contact_todo/client/src/components/ManageCompanies.js"],"sourcesContent":["// ManageCompanies.js\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { updateCompany, deleteCompany } from './slices/companiesSlice';\n\nconst ManageCompanies = () => {\n  const companies = useSelector(state => state.companies.companies);\n  const dispatch = useDispatch();\n  const [editRowId, setEditRowId] = useState(null);\n\n  const companySchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required')\n      .min(2, 'Name must be at least 2 characters')\n      .max(50, 'Name must not exceed 50 characters'),\n  });\n\n  const handleEditSave = (values, companyId) => {\n    dispatch(updateCompany({ id: companyId, ...values }))\n      .then(() => setEditRowId(null))\n      .catch(error => {\n        console.error('Update failed', error);\n      });\n  };\n\n  const handleDeleteClick = (companyId) => {\n    if (window.confirm('Are you sure you want to delete this company?')) {\n      dispatch(deleteCompany(companyId));\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <h1 className=\"text-6xl font-bold mb-6 text-center\">Manage Companies</h1>\n      {/* Other buttons and content */}\n      <div className=\"overflow-x-auto\">\n        <table className=\"table w-full text-4xl\">\n          <thead>\n            {/* ... */}\n          </thead>\n          <tbody>\n            {companies.map(company => (\n              <tr key={company.id}>\n                <td>{company.id}</td>\n                <td>\n                  {editRowId === company.id ? (\n                    <Formik\n                      initialValues={{ name: company.name }}\n                      validationSchema={companySchema}\n                      onSubmit={(values) => handleEditSave(values, company.id)}\n                      enableReinitialize  // Add this if initial values can change\n                    >\n                      {({ isSubmitting }) => (\n                        <Form>\n                          <Field name=\"name\" as=\"input\" className=\"input input-bordered w-full max-w-xs\" />\n                          <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-success\">Save</button>\n                          <button type=\"button\" onClick={() => setEditRowId(null)} className=\"btn btn-error\">Cancel</button>\n                        </Form>\n                      )}\n                    </Formik>\n                  ) : (\n                    company.name\n                  )}\n                </td>\n                <td>\n                  {/* Display the company logo here if available */}\n                </td>\n                <td>\n                  <button onClick={() => setEditRowId(company.id)} className=\"btn btn-accent\">Edit</button>\n                  <button onClick={() => handleDeleteClick(company.id)} className=\"btn btn-error\">Delete</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default ManageCompanies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}