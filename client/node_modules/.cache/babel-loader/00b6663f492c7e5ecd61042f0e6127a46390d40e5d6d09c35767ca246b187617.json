{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/NewListForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addList } from './slices/listsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewListForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [contactId, setContactId] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addList({\n      title,\n      contact_id: parseInt(contactId, 10)\n    }));\n    // Reset form fields\n    setTitle('');\n    setContactId('');\n  };\n  const handleBack = () => {\n    navigate('/manage-todo');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      children: \"Back to Manage Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"List title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: contactId,\n        onChange: e => setContactId(e.target.value),\n        placeholder: \"Contact ID\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(NewListForm, \"dVj1kwcFvArM78ye+sMrnosR4ZM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = NewListForm;\nexport default NewListForm;\nvar _c;\n$RefreshReg$(_c, \"NewListForm\");","map":{"version":3,"names":["React","useState","useDispatch","useNavigate","addList","jsxDEV","_jsxDEV","NewListForm","_s","title","setTitle","contactId","setContactId","dispatch","navigate","handleSubmit","e","preventDefault","contact_id","parseInt","handleBack","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/NewListForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {useNavigate} from 'react-router-dom'\nimport { addList } from './slices/listsSlice'; \n\nconst NewListForm = () => {\n  const [title, setTitle] = useState('');\n  const [contactId, setContactId] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addList({\n      title,\n      contact_id: parseInt(contactId, 10), \n    }));\n    // Reset form fields\n    setTitle('');\n    setContactId('');\n  };\n\n  const handleBack=()=>{\n    navigate('/manage-todo')\n  }\n\n  return (\n    <div>\n      <button onClick={handleBack}>Back to Manage Todo</button>\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"List title\"\n        required\n      />\n      <input\n        type=\"number\"\n        value={contactId}\n        onChange={(e) => setContactId(e.target.value)}\n        placeholder=\"Contact ID\"\n        required\n      />\n      <button type=\"submit\">Add List</button>\n    </form>\n    </div>\n  );\n};\n\nexport default NewListForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAASC,OAAO,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,QAAQ,CAACT,OAAO,CAAC;MACfK,KAAK;MACLS,UAAU,EAAEC,QAAQ,CAACR,SAAS,EAAE,EAAE;IACpC,CAAC,CAAC,CAAC;IACH;IACAD,QAAQ,CAAC,EAAE,CAAC;IACZE,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAMQ,UAAU,GAACA,CAAA,KAAI;IACnBN,QAAQ,CAAC,cAAc,CAAC;EAC1B,CAAC;EAED,oBACER,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAQgB,OAAO,EAAEF,UAAW;MAAAC,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3DpB,OAAA;MAAMqB,QAAQ,EAAEZ,YAAa;MAAAM,QAAA,gBAC3Bf,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEpB,KAAM;QACbqB,QAAQ,EAAGd,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,YAAY;QACxBC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFpB,OAAA;QACEsB,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAElB,SAAU;QACjBmB,QAAQ,EAAGd,CAAC,IAAKJ,YAAY,CAACI,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;QAC9CG,WAAW,EAAC,YAAY;QACxBC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFpB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CA3CID,WAAW;EAAA,QAGEL,WAAW,EACXC,WAAW;AAAA;AAAA+B,EAAA,GAJxB3B,WAAW;AA6CjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}