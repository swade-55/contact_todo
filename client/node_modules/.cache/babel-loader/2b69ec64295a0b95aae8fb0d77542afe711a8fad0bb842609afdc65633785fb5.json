{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/NewUserForm.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewUserForm = () => {\n  const initialValues = {\n    username: '',\n    email: '',\n    password: ''\n  };\n  const handleBack = () => {\n    navigate('/manage-companies');\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Username is required'),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n  const onSubmit = (values, {\n    setSubmitting,\n    resetForm,\n    setErrors\n  }) => {\n    // Construct the API endpoint\n    const apiUrl = 'http://localhost:5000/users'; // Change this URL to your actual API endpoint\n\n    // Use Fetch API to submit form data\n    fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(values)\n    }).then(response => {\n      if (!response.ok) {\n        // Handle non-2xx status codes\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Success:', data);\n      // Handle success logic here, e.g., redirect or display success message\n      // Optionally reset the form\n      resetForm();\n    }).catch(error => {\n      console.error('Error:', error);\n      // Handle errors, e.g., display error message to the user\n      setErrors({\n        submit: 'Failed to create user'\n      });\n    }).finally(() => {\n      // Stop the submission regardless of the outcome\n      setSubmitting(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    children: ({\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"username\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"email\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"password\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c = NewUserForm;\nexport default NewUserForm;\nvar _c;\n$RefreshReg$(_c, \"NewUserForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","useNavigate","jsxDEV","_jsxDEV","NewUserForm","initialValues","username","email","password","handleBack","navigate","validationSchema","object","shape","string","required","onSubmit","values","setSubmitting","resetForm","setErrors","apiUrl","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","console","log","catch","error","submit","finally","children","isSubmitting","type","name","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","component","disabled","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/NewUserForm.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\n\nconst NewUserForm = () => {\n  const initialValues = {\n    username: '',\n    email: '',\n    password: '',\n  };\n\n  const handleBack=()=>{\n    navigate('/manage-companies')\n  }\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Username is required'),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string().required('Password is required'),\n  });\n\n  const onSubmit = (values, { setSubmitting, resetForm, setErrors }) => {\n    // Construct the API endpoint\n    const apiUrl = 'http://localhost:5000/users'; // Change this URL to your actual API endpoint\n\n    // Use Fetch API to submit form data\n    fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(values),\n    })\n    .then(response => {\n        if (!response.ok) {\n            // Handle non-2xx status codes\n            throw new Error('Network response was not ok');\n        }\n        return response.json();\n    })\n    .then(data => {\n        console.log('Success:', data);\n        // Handle success logic here, e.g., redirect or display success message\n        // Optionally reset the form\n        resetForm();\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        // Handle errors, e.g., display error message to the user\n        setErrors({ submit: 'Failed to create user' });\n    })\n    .finally(() => {\n        // Stop the submission regardless of the outcome\n        setSubmitting(false);\n    });\n};\n\n\n  return (\n    <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n      {({ isSubmitting }) => (\n        <Form>\n          <Field type=\"text\" name=\"username\" placeholder=\"Username\" />\n          <ErrorMessage name=\"username\" component=\"div\" />\n\n          <Field type=\"email\" name=\"email\" placeholder=\"Email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n\n          <Field type=\"password\" name=\"password\" placeholder=\"Password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n\n          <button type=\"submit\" disabled={isSubmitting}>\n            Create User\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewUserForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}