{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ListsDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchListsForContact } from './slices/listsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListsDisplay = ({\n  selectedContactId\n}) => {\n  _s();\n  const contacts = useSelector(state => state.contacts.contacts);\n  let selectedContact = contacts.find(contact => contact.id === selectedContactId);\n  let lists = selectedContact ? selectedContact.lists : [];\n  console.log('Lists to display:', lists);\n  const status = useSelector(state => state.lists.status);\n  const error = useSelector(state => state.lists.error);\n  useEffect(() => {\n    if (selectedContactId) {\n      dispatch(fetchListsForContact(selectedContactId));\n    }\n  }, [dispatch, selectedContactId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: lists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: list.title\n    }, list.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ListsDisplay, \"TkVFHPjzYS1nE9jXjPWtDQx8pms=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = ListsDisplay;\nexport default ListsDisplay;\nvar _c;\n$RefreshReg$(_c, \"ListsDisplay\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","fetchListsForContact","jsxDEV","_jsxDEV","ListsDisplay","selectedContactId","_s","contacts","state","selectedContact","find","contact","id","lists","console","log","status","error","dispatch","children","map","list","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ListsDisplay.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchListsForContact } from './slices/listsSlice';\n\nconst ListsDisplay = ({ selectedContactId }) => {\n  const contacts = useSelector((state) => state.contacts.contacts);\n  let selectedContact = contacts.find(contact => contact.id === selectedContactId);\n  let lists = selectedContact ? selectedContact.lists : [];\n\n\n\n\n\n  console.log('Lists to display:', lists);\n  const status = useSelector((state) => state.lists.status);\n  const error = useSelector((state) => state.lists.error);\n\n  useEffect(() => {\n    if (selectedContactId) {\n      dispatch(fetchListsForContact(selectedContactId));\n    }\n  }, [dispatch, selectedContactId]);\n\n\n  return (\n    <div>\n      {lists.map((list) => (\n        <div key={list.id}>{list.title}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default ListsDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,oBAAoB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAMC,QAAQ,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACD,QAAQ,CAACA,QAAQ,CAAC;EAChE,IAAIE,eAAe,GAAGF,QAAQ,CAACG,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKP,iBAAiB,CAAC;EAChF,IAAIQ,KAAK,GAAGJ,eAAe,GAAGA,eAAe,CAACI,KAAK,GAAG,EAAE;EAMxDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,KAAK,CAAC;EACvC,MAAMG,MAAM,GAAGjB,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACK,KAAK,CAACG,MAAM,CAAC;EACzD,MAAMC,KAAK,GAAGlB,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACK,KAAK,CAACI,KAAK,CAAC;EAEvDnB,SAAS,CAAC,MAAM;IACd,IAAIO,iBAAiB,EAAE;MACrBa,QAAQ,CAACjB,oBAAoB,CAACI,iBAAiB,CAAC,CAAC;IACnD;EACF,CAAC,EAAE,CAACa,QAAQ,EAAEb,iBAAiB,CAAC,CAAC;EAGjC,oBACEF,OAAA;IAAAgB,QAAA,EACGN,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACdlB,OAAA;MAAAgB,QAAA,EAAoBE,IAAI,CAACC;IAAK,GAApBD,IAAI,CAACT,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CA3BIF,YAAY;EAAA,QACCL,WAAW,EASbA,WAAW,EACZA,WAAW;AAAA;AAAA4B,EAAA,GAXrBvB,YAAY;AA6BlB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}