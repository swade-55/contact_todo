{"ast":null,"code":"// contactsSlice.js\nimport{createSlice,createAsyncThunk}from'@reduxjs/toolkit';const initialState={contacts:[],status:'idle',error:null};export const deleteContact=createAsyncThunk('contacts/deleteContacts',async(contactId,_ref)=>{let{rejectWithValue}=_ref;try{const response=await fetch(\"/contacts/\".concat(contactId),{method:'DELETE'});if(!response.ok){throw new Error('Network response was not ok');}return contactId;// Return the ID of the deleted contact\n}catch(error){return rejectWithValue(error.message);}});export const updateContact=createAsyncThunk('contacts/updateContact',async(contactData,_ref2)=>{let{rejectWithValue}=_ref2;try{const response=await fetch(\"/contacts/\".concat(contactData.id),{method:'PATCH',headers:{'Content-Type':'application/json'},body:JSON.stringify(contactData)});if(!response.ok){throw new Error('Network response was not ok');}return response.json();}catch(error){return rejectWithValue(error.message);}});export const addContact=createAsyncThunk('contacts/addContact',async(contactData,_ref3)=>{let{rejectWithValue}=_ref3;try{const response=await fetch('/contacts',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(contactData)});if(!response.ok){throw new Error('Network response was not ok');}return response.json();}catch(error){return rejectWithValue(error.message);}});export const fetchAllContacts=createAsyncThunk('contacts/fetchAllContacts',async userId=>{const url=\"/contacts-lists/\".concat(userId);const response=await fetch(url);if(!response.ok){console.error(\"HTTP error! status: \".concat(response.status));throw new Error('Could not fetch contacts');}const data=await response.json();return data;});export const addList=createAsyncThunk('lists/addList',async(listData,_ref4)=>{let{rejectWithValue}=_ref4;try{const response=await fetch('/lists',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(listData)});if(!response.ok){throw new Error('Failed to add list');}const data=await response.json();return data;}catch(error){return rejectWithValue(error.message);}});export const addTodo=createAsyncThunk('contacts/addTodo',async(todoData,_ref5)=>{let{rejectWithValue}=_ref5;try{const response=await fetch('/todos',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({title:todoData.title,description:todoData.description,completed:todoData.completed,dueDate:todoData.due_date,listId:todoData.list_id,tags:todoData.tags})});if(!response.ok){throw new Error('Failed to add todo');}const data=await response.json();return data;}catch(error){return rejectWithValue(error.message);}});export const contactsSlice=createSlice({name:'contacts',initialState,reducers:{},extraReducers:builder=>{builder.addCase(fetchAllContacts.pending,state=>{state.status='loading';}).addCase(fetchAllContacts.fulfilled,(state,action)=>{state.status='succeeded';// Set the contacts to the fetched data\nstate.contacts=action.payload;}).addCase(fetchAllContacts.rejected,(state,action)=>{state.status='failed';state.error=action.error.message;}).addCase(addContact.pending,state=>{state.status='loading';}).addCase(addContact.fulfilled,(state,action)=>{state.status='succeeded';state.contacts.push(action.payload);}).addCase(addContact.rejected,(state,action)=>{state.status='failed';state.error=action.error.message;}).addCase(addList.fulfilled,(state,action)=>{state.status='succeeded';const{contact_id}=action.payload;const contactIndex=state.contacts.findIndex(contact=>contact.id===contact_id);state.contacts[contactIndex].todo_lists.push(action.payload);}).addCase(deleteContact.fulfilled,(state,action)=>{state.contacts=state.contacts.filter(contact=>contact.id!==action.payload);}).addCase(updateContact.fulfilled,(state,action)=>{const index=state.contacts.findIndex(contact=>contact.id===action.payload.id);if(index!==-1){// Update the contact in the array\nstate.contacts[index]=action.payload;}else{console.warn(\"Updated contact not found in the array\");}}).addCase(addTodo.fulfilled,(state,action)=>{console.log(action.payload);state.status='succeeded';const{list_id}=action.payload;state.contacts.forEach(contact=>{var _contact$todo_lists;(_contact$todo_lists=contact.todo_lists)===null||_contact$todo_lists===void 0?void 0:_contact$todo_lists.forEach(list=>{if(list.id===list_id){list.todos.push(action.payload);}});});});}});export default contactsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","contacts","status","error","deleteContact","contactId","_ref","rejectWithValue","response","fetch","concat","method","ok","Error","message","updateContact","contactData","_ref2","id","headers","body","JSON","stringify","json","addContact","_ref3","fetchAllContacts","userId","url","console","data","addList","listData","_ref4","addTodo","todoData","_ref5","title","description","completed","dueDate","due_date","listId","list_id","tags","contactsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","push","contact_id","contactIndex","findIndex","contact","todo_lists","filter","index","warn","log","forEach","_contact$todo_lists","list","todos","reducer"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/slices/contactsSlice.js"],"sourcesContent":["// contactsSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst initialState = {\n  contacts: [],\n  status: 'idle',\n  error: null,\n};\n\nexport const deleteContact = createAsyncThunk('contacts/deleteContacts', async (contactId, { rejectWithValue }) => {\n  try {\n    const response = await fetch(`/contacts/${contactId}`, {\n      method: 'DELETE',\n    });\n\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    return contactId;  // Return the ID of the deleted contact\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\n\nexport const updateContact = createAsyncThunk('contacts/updateContact', async (contactData, { rejectWithValue }) => {\n  try {\n    const response = await fetch(`/contacts/${contactData.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(contactData),\n    });\n\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    return response.json();\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\nexport const addContact = createAsyncThunk('contacts/addContact',async(contactData,{rejectWithValue})=>{\n  try{\n    const response = await fetch('/contacts',{\n      method:'POST',\n      headers:{\n        'Content-Type':'application/json',\n      },\n      body:JSON.stringify(contactData)\n    });\n    if (!response.ok){\n      throw new Error('Network response was not ok')\n    }\n    return response.json();\n  } catch (error){\n    return rejectWithValue(error.message)\n  }\n});\n\n\nexport const fetchAllContacts = createAsyncThunk('contacts/fetchAllContacts', async (userId) => {\n  const url = `/contacts-lists/${userId}`; \n  const response = await fetch(url);\n\n  if (!response.ok) {\n    console.error(`HTTP error! status: ${response.status}`);\n    throw new Error('Could not fetch contacts');\n  }\n\n  const data = await response.json();\n  return data;\n});\n\nexport const addList = createAsyncThunk(\n  'lists/addList',\n  async (listData, { rejectWithValue }) => {\n    try {\n      const response = await fetch('/lists', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(listData),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add list');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const addTodo = createAsyncThunk(\n  'contacts/addTodo',\n  async (todoData, { rejectWithValue }) => {\n    try {\n      const response = await fetch('/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          title: todoData.title,\n          description: todoData.description,\n          completed: todoData.completed,\n          dueDate: todoData.due_date, \n          listId: todoData.list_id,   \n          tags: todoData.tags,\n        }),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add todo');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\n\n\nexport const contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchAllContacts.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchAllContacts.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        // Set the contacts to the fetched data\n        state.contacts = action.payload;\n      })\n      .addCase(fetchAllContacts.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      })\n      .addCase(addContact.pending,(state)=>{\n        state.status='loading';\n      })\n      .addCase(addContact.fulfilled,(state,action)=>{\n        state.status='succeeded';\n        state.contacts.push(action.payload)\n      })\n      .addCase(addContact.rejected,(state,action)=>{\n        state.status='failed';\n        state.error=action.error.message;\n      })\n      .addCase(addList.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        const {contact_id} = action.payload;\n        const contactIndex = state.contacts.findIndex(contact => contact.id === contact_id);\n          state.contacts[contactIndex].todo_lists.push(action.payload);\n\n      })\n      .addCase(deleteContact.fulfilled, (state, action) => {\n        state.contacts = state.contacts.filter(contact => contact.id !== action.payload);\n      })\n      .addCase(updateContact.fulfilled, (state, action) => {\n        const index = state.contacts.findIndex(contact => contact.id === action.payload.id);\n        if (index !== -1) {\n          // Update the contact in the array\n          state.contacts[index] = action.payload;\n        } else {\n          console.warn(\"Updated contact not found in the array\");\n        }\n      })\n      .addCase(addTodo.fulfilled, (state, action) => {\n        console.log(action.payload)\n        state.status = 'succeeded';\n        const { list_id} = action.payload;\n        state.contacts.forEach(contact => {\n          contact.todo_lists?.forEach(list => {\n            if (list.id === list_id) {\n              list.todos.push(action.payload);\n            }\n          });\n        });\n      });\n  },\n});\n\nexport default contactsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}