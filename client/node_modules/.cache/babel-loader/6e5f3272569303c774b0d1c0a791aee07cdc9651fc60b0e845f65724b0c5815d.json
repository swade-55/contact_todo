{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/ContactListsSidebar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sidebarStyle = {\n  backgroundColor: '#252525',\n  // Dark grey background\n  color: 'white',\n  padding: '20px',\n  width: '250px',\n  height: '100vh',\n  overflowY: 'auto'\n};\nconst contactItemStyle = {\n  padding: '10px',\n  cursor: 'pointer',\n  borderBottom: '1px solid #ddd' // light grey border\n};\nconst ContactListsSidebar = ({\n  onContactSelect\n}) => {\n  _s();\n  const contacts = useSelector(state => state.contacts.contacts);\n  if (status === 'loading') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this); // or any other loading indicator\n  }\n  if (status === 'failed') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error: Failed to fetch lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n  if (!lists) {\n    return null; // You can also render a placeholder if lists haven't been fetched yet\n  }\n  if (!Array.isArray(lists)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error: Lists data is not an array\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Check if lists array is empty\n  if (lists.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No lists found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: sidebarStyle,\n    children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => onContactSelect(contact.id),\n      style: contactItemStyle,\n      children: contact.name\n    }, contact.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactListsSidebar, \"FQPRIRb6lwui5Qc8L1TLBY7+JjM=\", false, function () {\n  return [useSelector];\n});\n_c = ContactListsSidebar;\nexport default ContactListsSidebar;\nvar _c;\n$RefreshReg$(_c, \"ContactListsSidebar\");","map":{"version":3,"names":["React","useSelector","jsxDEV","_jsxDEV","sidebarStyle","backgroundColor","color","padding","width","height","overflowY","contactItemStyle","cursor","borderBottom","ContactListsSidebar","onContactSelect","_s","contacts","state","status","children","fileName","_jsxFileName","lineNumber","columnNumber","lists","Array","isArray","length","style","map","contact","onClick","id","name","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/ContactListsSidebar.js"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst sidebarStyle = {\n  backgroundColor: '#252525', // Dark grey background\n  color: 'white',\n  padding: '20px',\n  width: '250px',\n  height: '100vh',\n  overflowY: 'auto',\n};\n\nconst contactItemStyle = {\n  padding: '10px',\n  cursor: 'pointer',\n  borderBottom: '1px solid #ddd', // light grey border\n};\n\nconst ContactListsSidebar = ({ onContactSelect }) => {\n  const contacts = useSelector((state) => state.contacts.contacts);\n\n  if (status === 'loading') {\n        return <div>Loading...</div>; // or any other loading indicator\n    }\n\n    if (status === 'failed') {\n        return <div>Error: Failed to fetch lists</div>;\n    }\n\n    if (!lists) {\n        return null; // You can also render a placeholder if lists haven't been fetched yet\n    }\n\n    if (!Array.isArray(lists)) {\n        return <div>Error: Lists data is not an array</div>;\n    }\n\n    // Check if lists array is empty\n    if (lists.length === 0) {\n        return <div>No lists found</div>;\n    }\n  \n  return (\n    <div style={sidebarStyle}>\n      {contacts.map((contact) => (\n        <div key={contact.id} onClick={() => onContactSelect(contact.id)} style={contactItemStyle}>\n          {contact.name}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ContactListsSidebar;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE,SAAS;EAAE;EAC5BC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,MAAM;EACfC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,OAAO;EACfC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,gBAAgB,GAAG;EACvBJ,OAAO,EAAE,MAAM;EACfK,MAAM,EAAE,SAAS;EACjBC,YAAY,EAAE,gBAAgB,CAAE;AAClC,CAAC;AAED,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,QAAQ,GAAGhB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACD,QAAQ,CAACA,QAAQ,CAAC;EAEhE,IAAIE,MAAM,KAAK,SAAS,EAAE;IACpB,oBAAOhB,OAAA;MAAAiB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;EAEA,IAAIL,MAAM,KAAK,QAAQ,EAAE;IACrB,oBAAOhB,OAAA;MAAAiB,QAAA,EAAK;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClD;EAEA,IAAI,CAACC,KAAK,EAAE;IACR,OAAO,IAAI,CAAC,CAAC;EACjB;EAEA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;IACvB,oBAAOtB,OAAA;MAAAiB,QAAA,EAAK;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACvD;;EAEA;EACA,IAAIC,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;IACpB,oBAAOzB,OAAA;MAAAiB,QAAA,EAAK;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACpC;EAEF,oBACErB,OAAA;IAAK0B,KAAK,EAAEzB,YAAa;IAAAgB,QAAA,EACtBH,QAAQ,CAACa,GAAG,CAAEC,OAAO,iBACpB5B,OAAA;MAAsB6B,OAAO,EAAEA,CAAA,KAAMjB,eAAe,CAACgB,OAAO,CAACE,EAAE,CAAE;MAACJ,KAAK,EAAElB,gBAAiB;MAAAS,QAAA,EACvFW,OAAO,CAACG;IAAI,GADLH,OAAO,CAACE,EAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEf,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACR,EAAA,CAjCIF,mBAAmB;EAAA,QACNb,WAAW;AAAA;AAAAkC,EAAA,GADxBrB,mBAAmB;AAmCzB,eAAeA,mBAAmB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}