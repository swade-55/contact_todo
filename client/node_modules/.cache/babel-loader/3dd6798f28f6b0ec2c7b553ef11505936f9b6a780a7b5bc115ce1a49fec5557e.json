{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageToDo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllContacts } from './slices/contactsSlice';\nimport ContactListsSidebar from './ContactListsSidebar';\nimport ListsDisplay from './ListsDisplay';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageToDo = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedContactId, setSelectedContactId] = useState(null);\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n  const handleContactSelect = contactId => {\n    console.log(`Contact selected with ID: ${contactId}`);\n    setSelectedContactId(contactId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '250px'\n      },\n      children: /*#__PURE__*/_jsxDEV(ContactListsSidebar, {\n        onContactSelect: handleContactSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1,\n        padding: '0 20px'\n      },\n      children: selectedContactId && /*#__PURE__*/_jsxDEV(ListsDisplay, {\n        selectedContactId: selectedContactId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageToDo, \"s9kyMaKynllU4KrGYQzJKChA/gI=\", false, function () {\n  return [useDispatch];\n});\n_c = ManageToDo;\nexport default ManageToDo;\nvar _c;\n$RefreshReg$(_c, \"ManageToDo\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","fetchAllContacts","ContactListsSidebar","ListsDisplay","useNavigate","jsxDEV","_jsxDEV","ManageToDo","_s","dispatch","selectedContactId","setSelectedContactId","handleContactSelect","contactId","console","log","style","display","children","width","onContactSelect","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","padding","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageToDo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllContacts } from './slices/contactsSlice';\nimport ContactListsSidebar from './ContactListsSidebar';\nimport ListsDisplay from './ListsDisplay'; \nimport {useNavigate} from 'react-router-dom'\n\nconst ManageToDo = () => {\n  const dispatch = useDispatch();\n  const [selectedContactId, setSelectedContactId] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const handleContactSelect = (contactId) => {\n    console.log(`Contact selected with ID: ${contactId}`);\n    setSelectedContactId(contactId);\n  };\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ width: '250px' }}>\n        <ContactListsSidebar onContactSelect={handleContactSelect} />\n      </div>\n      <div style={{ flexGrow: 1, padding: '0 20px' }}>\n        {selectedContactId && <ListsDisplay selectedContactId={selectedContactId} />}\n      </div>\n    </div>\n  );\n};\n\nexport default ManageToDo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAAQC,WAAW,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACR,gBAAgB,CAAC,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACQ,QAAQ,CAAC,CAAC;EAEd,MAAMG,mBAAmB,GAAIC,SAAS,IAAK;IACzCC,OAAO,CAACC,GAAG,CAAE,6BAA4BF,SAAU,EAAC,CAAC;IACrDF,oBAAoB,CAACE,SAAS,CAAC;EACjC,CAAC;EAED,oBACEP,OAAA;IAAKU,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BZ,OAAA;MAAKU,KAAK,EAAE;QAAEG,KAAK,EAAE;MAAQ,CAAE;MAAAD,QAAA,eAC7BZ,OAAA,CAACJ,mBAAmB;QAACkB,eAAe,EAAER;MAAoB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACNlB,OAAA;MAAKU,KAAK,EAAE;QAAES,QAAQ,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAS,CAAE;MAAAR,QAAA,EAC5CR,iBAAiB,iBAAIJ,OAAA,CAACH,YAAY;QAACO,iBAAiB,EAAEA;MAAkB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CAvBID,UAAU;EAAA,QACGP,WAAW;AAAA;AAAA2B,EAAA,GADxBpB,UAAU;AAyBhB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}