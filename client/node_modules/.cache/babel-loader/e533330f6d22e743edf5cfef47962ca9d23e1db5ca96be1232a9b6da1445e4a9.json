{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/ManageToDo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllContacts } from './slices/contactsSlice';\nimport ContactListsSidebar from './ContactListsSidebar';\nimport ListsDisplay from './ListsDisplay';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { fetchListsForContact, addList } from './slices/listsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageToDo = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedContactId, setSelectedContactId] = useState(null);\n  const [selectedList, setSelectedList] = useState(null);\n  const navigate = useNavigate();\n  const handleBack = () => {\n    navigate('/');\n  };\n  const handleAddForm = () => {\n    navigate('/add-todo');\n  };\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n  const handleContactSelect = contactId => {\n    console.log(`Contact selected with ID: ${contactId}`);\n    setSelectedContactId(contactId);\n    setSelectedList(null);\n    dispatch(fetchListsForContact(contactId));\n  };\n  const handleAddList = () => {\n    navigate('/add-list');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      children: \"Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddForm,\n      children: \"Add New Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddList,\n      children: \"Add New List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '250px'\n        },\n        children: /*#__PURE__*/_jsxDEV(ContactListsSidebar, {\n          onContactSelect: handleContactSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1,\n          padding: '0 20px'\n        },\n        children: selectedContactId && !selectedList && /*#__PURE__*/_jsxDEV(ListsDisplay, {\n          selectedContactId: selectedContactId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageToDo, \"yqLWBq8qA2RLqFa9QvUOcsGvizQ=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = ManageToDo;\nexport default ManageToDo;\nvar _c;\n$RefreshReg$(_c, \"ManageToDo\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","fetchAllContacts","ContactListsSidebar","ListsDisplay","Navigate","useNavigate","fetchListsForContact","addList","jsxDEV","_jsxDEV","ManageToDo","_s","dispatch","selectedContactId","setSelectedContactId","selectedList","setSelectedList","navigate","handleBack","handleAddForm","handleContactSelect","contactId","console","log","handleAddList","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","display","width","onContactSelect","flexGrow","padding","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/ManageToDo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllContacts } from './slices/contactsSlice';\nimport ContactListsSidebar from './ContactListsSidebar';\nimport ListsDisplay from './ListsDisplay'; \nimport {Navigate, useNavigate} from 'react-router-dom'\nimport {fetchListsForContact, addList} from './slices/listsSlice';\n\nconst ManageToDo = () => {\n  const dispatch = useDispatch();\n  const [selectedContactId, setSelectedContactId] = useState(null);\n  const [selectedList, setSelectedList] = useState(null);\n  const navigate = useNavigate(); \n  const handleBack = ()=>{\n    navigate('/')\n  }\n\n  const handleAddForm = ()=>{\n    navigate('/add-todo')\n  }\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const handleContactSelect = (contactId) => {\n    console.log(`Contact selected with ID: ${contactId}`);\n    setSelectedContactId(contactId);\n    setSelectedList(null);\n    dispatch(fetchListsForContact(contactId))\n  };\n\n  const handleAddList = ()=>{\n    navigate('/add-list')\n  }\n\n  return (\n    <div>\n    <button onClick={handleBack}>Back to Home</button>  \n    <button onClick={handleAddForm}>Add New Todo</button>  \n    <button onClick={handleAddList}>Add New List</button>  \n    <div style={{ display: 'flex' }}>\n      <div style={{ width: '250px' }}>\n        <ContactListsSidebar onContactSelect={handleContactSelect} />\n      </div>\n      <div style={{ flexGrow: 1, padding: '0 20px' }}>\n        {selectedContactId && !selectedList && <ListsDisplay selectedContactId={selectedContactId} />}\n      </div>\n    </div>\n    </div>\n  );\n};\n\nexport default ManageToDo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}