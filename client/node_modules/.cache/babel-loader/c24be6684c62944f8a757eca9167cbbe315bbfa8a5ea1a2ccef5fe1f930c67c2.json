{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageToDo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchCompanies } from './slices/companiesSlice';\nimport { fetchContacts } from './slices/contactsSlice';\nimport { fetchListsForUser } from './slices/listsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageToDo = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedCompanyId, setSelectedCompanyId] = useState('');\n  const [selectedContactId, setSelectedContactId] = useState('');\n  const companies = useSelector(state => state.companies.companies);\n  const contacts = useSelector(state => state.contacts.contacts);\n  const lists = useSelector(state => state.lists.lists);\n  useEffect(() => {\n    dispatch(fetchCompanies());\n  }, [dispatch]);\n  useEffect(() => {\n    if (selectedCompanyId) {\n      dispatch(fetchContacts(selectedCompanyId));\n    }\n  }, [selectedCompanyId, dispatch]);\n  useEffect(() => {\n    if (selectedContactId) {\n      dispatch(fetchListsForUser(selectedContactId));\n    }\n  }, [selectedContactId, dispatch]);\n  const handleCompanyChange = e => {\n    setSelectedCompanyId(e.target.value);\n    setSelectedContactId('');\n  };\n  const handleContactChange = e => {\n    setSelectedContactId(e.target.value);\n  };\n  const handleListSelect = listId => {\n    dispatch(fetchToDosForList(listId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleCompanyChange,\n      value: selectedCompanyId,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), companies.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: company.id,\n        children: company.name\n      }, company.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), selectedCompanyId && /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleContactChange,\n      value: selectedContactId,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), contacts.map(contact => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: contact.id,\n        children: contact.name\n      }, contact.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: lists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleListSelect(list.id),\n        children: list.title\n      }, list.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: todo.title\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageToDo, \"0xPbCVA0FB5pq9cBzAepifeG8LQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = ManageToDo;\nexport default ManageToDo;\nvar _c;\n$RefreshReg$(_c, \"ManageToDo\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","fetchCompanies","fetchContacts","fetchListsForUser","jsxDEV","_jsxDEV","ManageToDo","_s","dispatch","selectedCompanyId","setSelectedCompanyId","selectedContactId","setSelectedContactId","companies","state","contacts","lists","handleCompanyChange","e","target","value","handleContactChange","handleListSelect","listId","fetchToDosForList","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","company","id","name","contact","list","onClick","title","todos","todo","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageToDo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchCompanies } from './slices/companiesSlice';\nimport { fetchContacts } from './slices/contactsSlice';\nimport { fetchListsForUser } from './slices/listsSlice';\n\nconst ManageToDo = () => {\n  const dispatch = useDispatch();\n  const [selectedCompanyId, setSelectedCompanyId] = useState('');\n  const [selectedContactId, setSelectedContactId] = useState('');\n  const companies = useSelector((state) => state.companies.companies);\n  const contacts = useSelector((state) => state.contacts.contacts);\n  const lists = useSelector((state) => state.lists.lists);\n\n  useEffect(() => {\n    dispatch(fetchCompanies());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedCompanyId) {\n      dispatch(fetchContacts(selectedCompanyId));\n    }\n  }, [selectedCompanyId, dispatch]);\n\n  useEffect(() => {\n    if (selectedContactId) {\n      dispatch(fetchListsForUser(selectedContactId));\n    }\n  }, [selectedContactId, dispatch]);\n\n  const handleCompanyChange = (e) => {\n    setSelectedCompanyId(e.target.value);\n    setSelectedContactId('');\n  };\n\n  const handleContactChange = (e) => {\n    setSelectedContactId(e.target.value);\n  };\n\n  const handleListSelect = (listId) => {\n    dispatch(fetchToDosForList(listId));\n  };\n\n  return (\n    <div>\n      <select onChange={handleCompanyChange} value={selectedCompanyId}>\n        <option value=\"\">Select Company</option>\n        {companies.map((company) => (\n          <option key={company.id} value={company.id}>\n            {company.name}\n          </option>\n        ))}\n      </select>\n      {selectedCompanyId && (\n        <select onChange={handleContactChange} value={selectedContactId}>\n          <option value=\"\">Select Contact</option>\n          {contacts.map((contact) => (\n            <option key={contact.id} value={contact.id}>\n              {contact.name}\n            </option>\n          ))}\n        </select>\n      )}\n      <div>\n        {lists.map((list) => (\n          <div key={list.id} onClick={() => handleListSelect(list.id)}>\n            {list.title}\n          </div>\n        ))}\n      </div>\n      <div>\n        {todos.map((todo) => (\n          <div key={todo.id}>{todo.title}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ManageToDo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}