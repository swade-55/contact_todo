{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageCompanies.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { useTable } from '@tanstack/react-table';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageCompanies = () => {\n  _s();\n  // Retrieve companies from Redux store\n  const companies = useSelector(state => state.companies.companies);\n\n  // Define the table columns\n  const columns = useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id' // accessor is the \"key\" in the data\n  }, {\n    Header: 'Name',\n    accessor: 'name'\n  }], []);\n\n  // Define the table data\n  const data = useMemo(() => companies, [companies]);\n\n  // Create a table instance\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n\n  // Destructure properties and methods from the table instance to render the UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n\n  // Render the table UI\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageCompanies, \"B7B3J/xQtPw8TNBISZIMSjv5IV0=\", false, function () {\n  return [useSelector, useTable];\n});\n_c = ManageCompanies;\nexport default ManageCompanies;\nvar _c;\n$RefreshReg$(_c, \"ManageCompanies\");","map":{"version":3,"names":["React","useMemo","useTable","useSelector","jsxDEV","_jsxDEV","ManageCompanies","_s","companies","state","columns","Header","accessor","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageCompanies.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { useTable } from '@tanstack/react-table';\nimport { useSelector } from 'react-redux';\n\nconst ManageCompanies = () => {\n  // Retrieve companies from Redux store\n  const companies = useSelector((state) => state.companies.companies);\n\n  // Define the table columns\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'ID',\n        accessor: 'id', // accessor is the \"key\" in the data\n      },\n      {\n        Header: 'Name',\n        accessor: 'name',\n      },\n    ],\n    []\n  );\n\n  // Define the table data\n  const data = useMemo(() => companies, [companies]);\n\n  // Create a table instance\n  const tableInstance = useTable({ columns, data });\n\n  // Destructure properties and methods from the table instance to render the UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = tableInstance;\n\n  // Render the table UI\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map(row => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ManageCompanies;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B;EACA,MAAMC,SAAS,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACD,SAAS,CAACA,SAAS,CAAC;;EAEnE;EACA,MAAME,OAAO,GAAGT,OAAO,CACrB,MAAM,CACJ;IACEU,MAAM,EAAE,IAAI;IACZC,QAAQ,EAAE,IAAI,CAAE;EAClB,CAAC,EACD;IACED,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE;EACZ,CAAC,CACF,EACD,EACF,CAAC;;EAED;EACA,MAAMC,IAAI,GAAGZ,OAAO,CAAC,MAAMO,SAAS,EAAE,CAACA,SAAS,CAAC,CAAC;;EAElD;EACA,MAAMM,aAAa,GAAGZ,QAAQ,CAAC;IAAEQ,OAAO;IAAEG;EAAK,CAAC,CAAC;;EAEjD;EACA,MAAM;IACJE,aAAa;IACbC,iBAAiB;IACjBC,YAAY;IACZC,IAAI;IACJC;EACF,CAAC,GAAGL,aAAa;;EAEjB;EACA,oBACET,OAAA;IAAA,GAAWU,aAAa,CAAC,CAAC;IAAAK,QAAA,gBACxBf,OAAA;MAAAe,QAAA,EACGH,YAAY,CAACI,GAAG,CAACC,WAAW,iBAC3BjB,OAAA;QAAA,GAAQiB,WAAW,CAACC,mBAAmB,CAAC,CAAC;QAAAH,QAAA,EACtCE,WAAW,CAACE,OAAO,CAACH,GAAG,CAACI,MAAM,iBAC7BpB,OAAA;UAAA,GAAQoB,MAAM,CAACC,cAAc,CAAC,CAAC;UAAAN,QAAA,EAAGK,MAAM,CAACE,MAAM,CAAC,QAAQ;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAC/D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACR1B,OAAA;MAAA,GAAWW,iBAAiB,CAAC,CAAC;MAAAI,QAAA,EAC3BF,IAAI,CAACG,GAAG,CAACW,GAAG,IAAI;QACfb,UAAU,CAACa,GAAG,CAAC;QACf,oBACE3B,OAAA;UAAA,GAAQ2B,GAAG,CAACC,WAAW,CAAC,CAAC;UAAAb,QAAA,EACtBY,GAAG,CAACE,KAAK,CAACb,GAAG,CAACc,IAAI,IAAI;YACrB,oBAAO9B,OAAA;cAAA,GAAQ8B,IAAI,CAACC,YAAY,CAAC,CAAC;cAAAhB,QAAA,EAAGe,IAAI,CAACR,MAAM,CAAC,MAAM;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAChE,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACxB,EAAA,CA5DID,eAAe;EAAA,QAEDH,WAAW,EAqBPD,QAAQ;AAAA;AAAAmC,EAAA,GAvB1B/B,eAAe;AA8DrB,eAAeA,eAAe;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}