{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/NewUserForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewUserForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const initialValues = {\n    username: '',\n    email: '',\n    password: ''\n  };\n  const handleBack = () => {\n    navigate('/manage-companies');\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Username is required'),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n  const onSubmit = (values, {\n    setSubmitting,\n    resetForm,\n    setErrors\n  }) => {\n    // Construct the API endpoint\n    const apiUrl = 'http://localhost:5000/users'; // Change this URL to your actual API endpoint\n\n    // Use Fetch API to submit form data\n    fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(values)\n    }).then(response => {\n      if (!response.ok) {\n        // Handle non-2xx status codes\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Success:', data);\n      // Handle success logic here, e.g., redirect or display success message\n      // Optionally reset the form\n      resetForm();\n    }).catch(error => {\n      console.error('Error:', error);\n      // Handle errors, e.g., display error message to the user\n      setErrors({\n        submit: 'Failed to create user'\n      });\n    }).finally(() => {\n      // Stop the submission regardless of the outcome\n      setSubmitting(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      children: \"Back to Manage Companies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"username\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Create User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(NewUserForm, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = NewUserForm;\nexport default NewUserForm;\nvar _c;\n$RefreshReg$(_c, \"NewUserForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","useNavigate","jsxDEV","_jsxDEV","NewUserForm","_s","navigate","initialValues","username","email","password","handleBack","validationSchema","object","shape","string","required","onSubmit","values","setSubmitting","resetForm","setErrors","apiUrl","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","console","log","catch","error","submit","finally","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isSubmitting","type","name","placeholder","component","disabled","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/NewUserForm.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\n\nconst NewUserForm = () => {\n  const navigate = useNavigate();\n  const initialValues = {\n    username: '',\n    email: '',\n    password: '',\n  };\n\n  const handleBack=()=>{\n    navigate('/manage-companies')\n  }\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Username is required'),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string().required('Password is required'),\n  });\n\n  const onSubmit = (values, { setSubmitting, resetForm, setErrors }) => {\n    // Construct the API endpoint\n    const apiUrl = 'http://localhost:5000/users'; // Change this URL to your actual API endpoint\n\n    // Use Fetch API to submit form data\n    fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(values),\n    })\n    .then(response => {\n        if (!response.ok) {\n            // Handle non-2xx status codes\n            throw new Error('Network response was not ok');\n        }\n        return response.json();\n    })\n    .then(data => {\n        console.log('Success:', data);\n        // Handle success logic here, e.g., redirect or display success message\n        // Optionally reset the form\n        resetForm();\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        // Handle errors, e.g., display error message to the user\n        setErrors({ submit: 'Failed to create user' });\n    })\n    .finally(() => {\n        // Stop the submission regardless of the outcome\n        setSubmitting(false);\n    });\n};\n\n\n  return (\n    <div>\n      <button onClick={handleBack}>Back to Manage Companies</button>\n    <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n      {({ isSubmitting }) => (\n        <Form>\n          <Field type=\"text\" name=\"username\" placeholder=\"Username\" />\n          <ErrorMessage name=\"username\" component=\"div\" />\n\n          <Field type=\"email\" name=\"email\" placeholder=\"Email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n\n          <Field type=\"password\" name=\"password\" placeholder=\"Password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n\n          <button type=\"submit\" disabled={isSubmitting}>\n            Create User\n          </button>\n        </Form>\n      )}\n    </Formik>\n    </div>\n  );\n};\n\nexport default NewUserForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}