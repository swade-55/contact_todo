{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Projects/contact_todo/client/src/components/Breadcrumbs.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Breadcrumbs = () => {\n  _s();\n  const location = useLocation();\n  let currentLink = '';\n  const crumbs = location.pathname.split('/').filter(crumb => crumb !== '').map((crumb, index, arr) => {\n    currentLink += `/${crumb}`; // Corrected to use += for appending\n    // If it's the last crumb, do not create a Link to avoid navigation to the current page.\n    const isLast = index === arr.length - 1;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crumb\",\n      children: isLast ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: crumb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: currentLink,\n        children: crumb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 42\n      }, this)\n    }, crumb, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"breadcrumbs\",\n    children: [crumbs.length > 1 && crumbs, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Breadcrumbs, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Breadcrumbs;\nexport default Breadcrumbs;\nvar _c;\n$RefreshReg$(_c, \"Breadcrumbs\");","map":{"version":3,"names":["React","Link","useLocation","jsxDEV","_jsxDEV","Breadcrumbs","_s","location","currentLink","crumbs","pathname","split","filter","crumb","map","index","arr","isLast","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Projects/contact_todo/client/src/components/Breadcrumbs.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Breadcrumbs = () => {\n  const location = useLocation();\n  let currentLink = '';\n\n  const crumbs = location.pathname.split('/').filter(crumb => crumb !== '').map((crumb, index, arr) => {\n    currentLink += `/${crumb}`; // Corrected to use += for appending\n    // If it's the last crumb, do not create a Link to avoid navigation to the current page.\n    const isLast = index === arr.length - 1;\n    return (\n      <div className=\"crumb\" key={crumb}>\n        {isLast ? <span>{crumb}</span> : <Link to={currentLink}>{crumb}</Link>}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"breadcrumbs\">\n      {crumbs.length > 1 && crumbs} {/* Render breadcrumbs only if there's more than one crumb */}\n    </div>\n  );\n};\n\nexport default Breadcrumbs;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,IAAIM,WAAW,GAAG,EAAE;EAEpB,MAAMC,MAAM,GAAGF,QAAQ,CAACG,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAK,EAAE,CAAC,CAACC,GAAG,CAAC,CAACD,KAAK,EAAEE,KAAK,EAAEC,GAAG,KAAK;IACnGR,WAAW,IAAK,IAAGK,KAAM,EAAC,CAAC,CAAC;IAC5B;IACA,MAAMI,MAAM,GAAGF,KAAK,KAAKC,GAAG,CAACE,MAAM,GAAG,CAAC;IACvC,oBACEd,OAAA;MAAKe,SAAS,EAAC,OAAO;MAAAC,QAAA,EACnBH,MAAM,gBAAGb,OAAA;QAAAgB,QAAA,EAAOP;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,gBAAGpB,OAAA,CAACH,IAAI;QAACwB,EAAE,EAAEjB,WAAY;QAAAY,QAAA,EAAEP;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC,GAD5CX,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CAAC;EAEV,CAAC,CAAC;EAEF,oBACEpB,OAAA;IAAKe,SAAS,EAAC,aAAa;IAAAC,QAAA,GACzBX,MAAM,CAACS,MAAM,GAAG,CAAC,IAAIT,MAAM,EAAC,GAAC;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV,CAAC;AAAClB,EAAA,CApBID,WAAW;EAAA,QACEH,WAAW;AAAA;AAAAwB,EAAA,GADxBrB,WAAW;AAsBjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}