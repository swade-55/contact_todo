{"ast":null,"code":"import React from'react';import{useDispatch,useSelector}from'react-redux';import{useNavigate}from'react-router-dom';import{Formik,Form,Field,ErrorMessage}from'formik';import*as Yup from'yup';import{addList}from'./slices/contactsSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const newListSchema=Yup.object().shape({title:Yup.string().min(2,'Title must be at least 2 characters long').required('Title is required'),contactId:Yup.number().positive('Contact ID must be a positive number').required('Contact ID is required').integer('Contact ID must be an integer')});const NewListForm=()=>{const dispatch=useDispatch();const navigate=useNavigate();const contacts=useSelector(state=>state.contacts.contacts);console.log('contacts',contacts);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/manage-todo'),children:\"Back to Manage Todo\"}),/*#__PURE__*/_jsx(Formik,{initialValues:{title:'',contactId:''},validationSchema:newListSchema,onSubmit:(values,_ref)=>{let{resetForm}=_ref;dispatch(addList({title:values.title,contact_id:parseInt(values.contactId,10)}));resetForm();},children:_ref2=>{let{isSubmitting}=_ref2;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Field,{type:\"text\",name:\"title\",placeholder:\"List title\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"title\",component:\"div\"}),/*#__PURE__*/_jsxs(Field,{as:\"select\",name:\"contactId\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Contact\"}),contacts.map(contact=>/*#__PURE__*/_jsx(\"option\",{value:contact.id,children:contact.name},contact.id))]}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"contactId\",component:\"div\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isSubmitting,children:\"Add List\"})]});}})]});};export default NewListForm;","map":{"version":3,"names":["React","useDispatch","useSelector","useNavigate","Formik","Form","Field","ErrorMessage","Yup","addList","jsx","_jsx","jsxs","_jsxs","newListSchema","object","shape","title","string","min","required","contactId","number","positive","integer","NewListForm","dispatch","navigate","contacts","state","console","log","children","onClick","initialValues","validationSchema","onSubmit","values","_ref","resetForm","contact_id","parseInt","_ref2","isSubmitting","type","name","placeholder","component","as","value","map","contact","id","disabled"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/NewListForm.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { addList } from './slices/contactsSlice';\n\nconst newListSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(2, 'Title must be at least 2 characters long')\n    .required('Title is required'),\n  contactId: Yup.number()\n    .positive('Contact ID must be a positive number')\n    .required('Contact ID is required')\n    .integer('Contact ID must be an integer'),\n});\n\nconst NewListForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const contacts = useSelector(state => state.contacts.contacts)\n  console.log('contacts', contacts)\n\n  return (\n    <div>\n      <button onClick={() => navigate('/manage-todo')}>Back to Manage Todo</button>\n      <Formik\n        initialValues={{ title: '', contactId: '' }}\n        validationSchema={newListSchema}\n        onSubmit={(values, { resetForm }) => {\n          dispatch(addList({\n            title: values.title,\n            contact_id: parseInt(values.contactId, 10),\n          }));\n          resetForm();\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"text\" name=\"title\" placeholder=\"List title\" />\n            <ErrorMessage name=\"title\" component=\"div\" />\n            <Field as=\"select\" name=\"contactId\">\n              <option value=\"\">Select Contact</option>\n              {contacts.map(contact => (\n                <option key={contact.id} value={contact.id}>\n                  {contact.name}\n                </option>\n              ))}\n            </Field>\n            <ErrorMessage name=\"contactId\" component=\"div\" />\n\n            <button type=\"submit\" disabled={isSubmitting}>\n              Add List\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NewListForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}