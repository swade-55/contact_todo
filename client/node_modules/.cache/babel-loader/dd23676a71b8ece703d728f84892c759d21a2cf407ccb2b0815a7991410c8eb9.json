{"ast":null,"code":"// authSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\n// Inside authSlice.js or a separate file for async actions\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nexport const authenticateUser = createAsyncThunk('auth/authenticateUser', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    let data = await response.json();\n    if (response.ok) {\n      return data; // This will be the payload for the fulfilled action\n    } else {\n      return rejectWithValue(data); // This will be the payload for the rejected action\n    }\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: null\n};\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      // Action payload should include user info and token\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n\n      // Optionally set token in localStorage or handle via side effects\n      localStorage.setItem('token', action.payload.token);\n    },\n    logout: state => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n\n      // Clear token from localStorage\n      localStorage.removeItem('token');\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  login,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authenticateUser","userData","rejectWithValue","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","initialState","isAuthenticated","user","token","authSlice","name","reducers","login","state","action","payload","localStorage","setItem","logout","removeItem","actions","reducer"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/slices/authSlice.js"],"sourcesContent":["// authSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\n// Inside authSlice.js or a separate file for async actions\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const authenticateUser = createAsyncThunk(\n  'auth/authenticateUser',\n  async (userData, { rejectWithValue }) => {\n    try {\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n      let data = await response.json();\n      if (response.ok) {\n        return data; // This will be the payload for the fulfilled action\n      } else {\n        return rejectWithValue(data); // This will be the payload for the rejected action\n      }\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\n\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: null,\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      // Action payload should include user info and token\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n\n      // Optionally set token in localStorage or handle via side effects\n      localStorage.setItem('token', action.payload.token);\n    },\n    logout: (state) => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n\n      // Clear token from localStorage\n      localStorage.removeItem('token');\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { login, logout } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,SAASC,gBAAgB,QAAQ,kBAAkB;AAEnD,OAAO,MAAMC,gBAAgB,GAAGD,gBAAgB,CAC9C,uBAAuB,EACvB,OAAOE,QAAQ,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAE;MACrCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ;IAC/B,CAAC,CAAC;IACF,IAAIS,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAChC,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACf,OAAOF,IAAI,CAAC,CAAC;IACf,CAAC,MAAM;MACL,OAAOR,eAAe,CAACQ,IAAI,CAAC,CAAC,CAAC;IAChC;EACF,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAOX,eAAe,CAACW,KAAK,CAACV,QAAQ,CAACO,IAAI,CAAC;EAC7C;AACF,CACF,CAAC;AAGD,MAAMI,YAAY,GAAG;EACnBC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGpB,WAAW,CAAC;EACnCqB,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,KAAK,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxB;MACAD,KAAK,CAACP,eAAe,GAAG,IAAI;MAC5BO,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO,CAACR,IAAI;MAChCM,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO,CAACP,KAAK;;MAElC;MACAQ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,MAAM,CAACC,OAAO,CAACP,KAAK,CAAC;IACrD,CAAC;IACDU,MAAM,EAAGL,KAAK,IAAK;MACjBA,KAAK,CAACP,eAAe,GAAG,KAAK;MAC7BO,KAAK,CAACN,IAAI,GAAG,IAAI;MACjBM,KAAK,CAACL,KAAK,GAAG,IAAI;;MAElB;MACAQ,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAClC;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEP,KAAK;EAAEM;AAAO,CAAC,GAAGT,SAAS,CAACW,OAAO;AAElD,eAAeX,SAAS,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}