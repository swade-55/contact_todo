{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { authenticateUser } from './slices/authSlice'; // Make sure this import is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const initialValues = {\n    username: '',\n    password: ''\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Username is required'),\n    password: Yup.string().required('Password is required')\n  });\n  const onSubmit = async (values, {\n    setSubmitting,\n    setErrors\n  }) => {\n    try {\n      const actionResult = await dispatch(authenticateUser(values));\n      const data = actionResult.payload;\n      if (actionResult.type === 'auth/authenticateUser/fulfilled') {\n        console.log('Login Success:', data);\n        console.log('User ID:', data.user_id); // Ensure this matches your actual response structure\n        navigate('/manage-companies'); // Navigate after successful login\n      } else {\n        setErrors({\n          submit: data.message || 'Login failed. Please check your username and password.'\n        });\n      }\n    } catch (error) {\n      console.error('Login Error:', error);\n      setErrors({\n        submit: 'Login failed. Please check your username and password.'\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: ({\n        isSubmitting,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"username\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), errors.submit && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errors.submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","useNavigate","useDispatch","authenticateUser","jsxDEV","_jsxDEV","LoginForm","_s","navigate","dispatch","initialValues","username","password","validationSchema","object","shape","string","required","onSubmit","values","setSubmitting","setErrors","actionResult","data","payload","type","console","log","user_id","submit","message","error","children","isSubmitting","errors","name","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","component","className","disabled","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/LoginForm.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { authenticateUser } from './slices/authSlice'; // Make sure this import is correct\n\nconst LoginForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const initialValues = {\n    username: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Username is required'),\n    password: Yup.string().required('Password is required'),\n  });\n\n  const onSubmit = async (values, { setSubmitting, setErrors }) => {\n    try {\n      const actionResult = await dispatch(authenticateUser(values));\n      const data = actionResult.payload;\n      if (actionResult.type === 'auth/authenticateUser/fulfilled') {\n        console.log('Login Success:', data);\n        console.log('User ID:', data.user_id); // Ensure this matches your actual response structure\n        navigate('/manage-companies'); // Navigate after successful login\n      } else {\n        setErrors({ submit: data.message || 'Login failed. Please check your username and password.' });\n      }\n    } catch (error) {\n      console.error('Login Error:', error);\n      setErrors({ submit: 'Login failed. Please check your username and password.' });\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting, errors }) => (\n          <Form>\n            <Field type=\"text\" name=\"username\" placeholder=\"Username\" />\n            <ErrorMessage name=\"username\" component=\"div\" />\n\n            <Field type=\"password\" name=\"password\" placeholder=\"Password\" />\n            <ErrorMessage name=\"password\" component=\"div\" />\n\n            {errors.submit && <div className=\"error\">{errors.submit}</div>}\n\n            <button type=\"submit\" disabled={isSubmitting}>\n              Login\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}