{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageCompanies.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useTable } from 'react-table'; // Import useTable from react-table\nimport '../styles/ManageCompanies.css';\nimport { updateCompany } from './slices/companiesSlice';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageCompanies = () => {\n  _s();\n  // Retrieve companies from Redux store\n  const companies = useSelector(state => state.companies.companies);\n  const navigate = useNavigate();\n  const [editRowId, setEditRowId] = useState(null);\n  const [editFormData, setEditFormData] = useState({\n    name: '',\n    id: null\n  });\n  const dispatch = useDispatch();\n  const handleBack = () => {\n    navigate('/');\n  };\n  const handleAddCompanyClick = () => {\n    navigate('/add-company');\n  };\n  const handleEditClick = (company, e) => {\n    e.preventDefault();\n    setEditRowId(company.id);\n    setEditFormData({\n      name: company.name,\n      id: company.id\n    });\n  };\n  const handleCancelClick = () => {\n    setEditRowId(null);\n  };\n  const handleSaveClick = () => {\n    dispatch(updateCompany(editFormData)) // Dispatch the action using Redux's dispatch\n    .then(() => {\n      // Handle success - maybe refresh the list or show a success message\n      dispatch(fetchCompanies);\n    }).catch(error => {\n      // Handle error - show an error message\n    });\n    setEditRowId(null);\n  };\n  const handleFormChange = e => {\n    setEditFormData({\n      ...editFormData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Define columns for react-table\n\n  const columns = React.useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id'\n  }, {\n    Header: 'Name',\n    accessor: 'name',\n    Cell: ({\n      row\n    }) => {\n      return editRowId === row.original.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: editFormData.name,\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: row.original.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this);\n    }\n  }, {\n    Header: 'Actions',\n    Cell: ({\n      row\n    }) => {\n      return editRowId === row.original.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveClick,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelClick,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handleEditClick(row.original, e),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this);\n    }\n  }], [editRowId, editFormData]);\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data: companies\n  });\n\n  // Render the table UI using react-table's UI construction methods\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddCompanyClick,\n      children: \"Add New Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      children: \"Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(ManageCompanies, \"PIcTNdKOzanfpdfFEnf8W3AQpYk=\", false, function () {\n  return [useSelector, useNavigate, useDispatch, useTable];\n});\n_c = ManageCompanies;\nexport default ManageCompanies;\nvar _c;\n$RefreshReg$(_c, \"ManageCompanies\");","map":{"version":3,"names":["React","useState","useSelector","useNavigate","useTable","updateCompany","useDispatch","jsxDEV","_jsxDEV","ManageCompanies","_s","companies","state","navigate","editRowId","setEditRowId","editFormData","setEditFormData","name","id","dispatch","handleBack","handleAddCompanyClick","handleEditClick","company","e","preventDefault","handleCancelClick","handleSaveClick","then","fetchCompanies","catch","error","handleFormChange","target","value","columns","useMemo","Header","accessor","Cell","row","original","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","data","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageCompanies.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { useSelector } from 'react-redux';\nimport {useNavigate} from 'react-router-dom'\nimport { useTable } from 'react-table'; // Import useTable from react-table\nimport '../styles/ManageCompanies.css';\nimport { updateCompany } from './slices/companiesSlice';\nimport {useDispatch} from 'react-redux'\n\nconst ManageCompanies = () => {\n  // Retrieve companies from Redux store\n  const companies = useSelector((state) => state.companies.companies);\n  const navigate = useNavigate();\n  const [editRowId, setEditRowId] = useState(null)\n  const [editFormData,setEditFormData] = useState({name:'',id:null})\n  const dispatch = useDispatch();\n\n\n  const handleBack = () => {\n    navigate('/')\n  }\n\n  const handleAddCompanyClick = ()=>{\n    navigate('/add-company')\n  }\n\n  const handleEditClick = (company,e)=>{\n    e.preventDefault()\n    setEditRowId(company.id)\n    setEditFormData({name:company.name,id:company.id})\n  }\n\n  const handleCancelClick = ()=>{\n    setEditRowId(null)\n  }\n\n  const handleSaveClick = () => {\n    dispatch(updateCompany(editFormData)) // Dispatch the action using Redux's dispatch\n      .then(() => {\n        // Handle success - maybe refresh the list or show a success message\n        dispatch(fetchCompanies)\n      })\n      .catch((error) => {\n        // Handle error - show an error message\n      });\n    setEditRowId(null);\n  };\n\n  const handleFormChange = (e) =>{\n    setEditFormData({...editFormData, [e.target.name]:e.target.value})\n\n  }\n\n  // Define columns for react-table\n\n  \n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'ID',\n        accessor: 'id',\n      },\n      {\n        Header: 'Name',\n        accessor: 'name',\n        Cell: ({ row }) => {\n          return editRowId === row.original.id ? (\n            <input\n            type=\"text\"\n            name=\"name\"\n            value={editFormData.name}\n            onChange={handleFormChange}\n            />\n            ) : (\n              <span>{row.original.name}</span>\n              );\n            },\n          },\n          {\n            Header: 'Actions',\n            Cell: ({ row }) => {\n              return editRowId === row.original.id ? (\n                <div>\n              <button onClick={handleSaveClick}>Save</button>\n              <button onClick={handleCancelClick}>Cancel</button>\n            </div>\n          ) : (\n            <button onClick={(e) => handleEditClick(row.original, e)}>Edit</button>\n            );\n          },\n        },\n      ],\n      [editRowId, editFormData]\n      );\n      \n      // Use the state and functions returned from useTable to build your UI\n      const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({ columns, data: companies });\n\n\n      // Render the table UI using react-table's UI construction methods\n      return (\n        <div className=\"container\">\n      <button onClick={handleAddCompanyClick}>Add New Company</button>\n      <button onClick={handleBack}>Back to Home</button>\n      <table {...getTableProps()} className=\"table\">\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => (\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ManageCompanies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}