{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Async action for handling login\nexport const loginUser = createAsyncThunk('auth/loginUser', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials),\n      credentials: 'include' // Necessary for cookies to be sent and received\n    });\n    if (!response.ok) throw new Error('Login failed');\n    const data = await response.json();\n    return data; // Assuming this contains user information\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\n// Async action for checking session validity\nexport const checkSession = createAsyncThunk('auth/checkSession', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch('/check_session', {\n      credentials: 'include'\n    });\n    if (!response.ok) throw new Error('Session invalid');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\n// Async action for handling logout\nexport const logoutUser = createAsyncThunk('auth/logoutUser', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch('/logout', {\n      method: 'DELETE',\n      credentials: 'include'\n    });\n    if (!response.ok) throw new Error('Logout failed');\n    return {};\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [loginUser.fulfilled]: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user; // Adjust according to your backend response\n      state.isLoading = false;\n      state.error = null;\n    },\n    [loginUser.pending]: state => {\n      state.isLoading = true;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n    [logoutUser.fulfilled]: state => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.isLoading = false;\n      state.error = null;\n    },\n    [checkSession.fulfilled]: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user; // Adjust according to your backend response\n      state.isLoading = false;\n      state.error = null;\n    },\n    [checkSession.rejected]: (state, action) => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","loginUser","credentials","rejectWithValue","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","message","checkSession","_","logoutUser","initialState","user","isAuthenticated","isLoading","authSlice","name","reducers","extraReducers","fulfilled","state","action","payload","pending","rejected","reducer"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Async action for handling login\nexport const loginUser = createAsyncThunk(\n  'auth/loginUser',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(credentials),\n        credentials: 'include', // Necessary for cookies to be sent and received\n      });\n      if (!response.ok) throw new Error('Login failed');\n      const data = await response.json();\n      return data; // Assuming this contains user information\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\n// Async action for checking session validity\nexport const checkSession = createAsyncThunk(\n  'auth/checkSession',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await fetch('/check_session', {\n        credentials: 'include',\n      });\n      if (!response.ok) throw new Error('Session invalid');\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\n// Async action for handling logout\nexport const logoutUser = createAsyncThunk(\n  'auth/logoutUser',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await fetch('/logout', {\n        method: 'DELETE',\n        credentials: 'include',\n      });\n      if (!response.ok) throw new Error('Logout failed');\n      return {};\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [loginUser.fulfilled]: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user; // Adjust according to your backend response\n      state.isLoading = false;\n      state.error = null;\n    },\n    [loginUser.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n    [logoutUser.fulfilled]: (state) => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.isLoading = false;\n      state.error = null;\n    },\n    [checkSession.fulfilled]: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user; // Adjust according to your backend response\n      state.isLoading = false;\n      state.error = null;\n    },\n    [checkSession.rejected]: (state, action) => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}