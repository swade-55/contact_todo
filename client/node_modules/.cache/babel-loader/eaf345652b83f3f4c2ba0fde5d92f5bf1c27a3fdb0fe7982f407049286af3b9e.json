{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Projects/contact_todo/client/src/components/NewCompanyForm.js\",\n  _s = $RefreshSig$();\n// NewCompanyForm.js\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCompany } from './slices/companiesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCompanyForm = ({\n  onClose\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const loggedInUserId = useSelector(state => state.auth.user);\n  // const loggedInUserIdObject = useSelector((state) => state.auth.user);\n  console.log('logged in user', loggedInUserId);\n  const initialValues = {\n    name: '',\n    image: null\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Company name is required')\n  });\n  const onSubmit = (values, {\n    setSubmitting\n  }) => {\n    if (!loggedInUserId) {\n      console.error(\"User ID is not available\");\n      setSubmitting(false);\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', values.name);\n    formData.append('manager_id', loggedInUserId);\n    if (values.image) {\n      formData.append('image', values.image);\n    }\n    dispatch(addCompany(formData)).then(() => {\n      onClose();\n    }).catch(error => {\n      console.error('Failed to add company', error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    children: ({\n      setFieldValue,\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control w-full max-w-xs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"label text-xl\",\n          children: \"Company Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Company Name\",\n          className: \"input input-bordered w-full max-w-xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\",\n          component: \"div\",\n          className: \"text-error text-xl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control w-full max-w-xs my-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          className: \"label text-xl\",\n          children: \"Company Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image\",\n          name: \"image\",\n          type: \"file\",\n          onChange: event => setFieldValue(\"image\", event.currentTarget.files[0]),\n          className: \"input input-bordered w-full max-w-xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onClose,\n          className: \"btn btn-error\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCompanyForm, \"7XpEruCqPyrxwAFT0+D7lw2muFg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = NewCompanyForm;\nexport default NewCompanyForm;\nvar _c;\n$RefreshReg$(_c, \"NewCompanyForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","useDispatch","useSelector","addCompany","jsxDEV","_jsxDEV","NewCompanyForm","onClose","_s","dispatch","loggedInUserId","state","auth","user","console","log","initialValues","name","image","validationSchema","object","shape","string","required","onSubmit","values","setSubmitting","error","formData","FormData","append","then","catch","finally","children","setFieldValue","isSubmitting","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","component","type","onChange","event","currentTarget","files","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Projects/contact_todo/client/src/components/NewCompanyForm.js"],"sourcesContent":["// NewCompanyForm.js\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCompany } from './slices/companiesSlice';\n\nconst NewCompanyForm = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const loggedInUserId = useSelector((state) => state.auth.user);\n  // const loggedInUserIdObject = useSelector((state) => state.auth.user);\n  console.log('logged in user', loggedInUserId)\n  \n\n  const initialValues = {\n    name: '',\n    image: null,\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Company name is required'),\n  });\n\n  const onSubmit = (values, { setSubmitting }) => {\n    if (!loggedInUserId) {\n      console.error(\"User ID is not available\");\n      setSubmitting(false);\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('name', values.name);\n    formData.append('manager_id', loggedInUserId);\n    \n    if (values.image) {\n      formData.append('image', values.image);\n    }\n\n    dispatch(addCompany(formData))\n      .then(() => {\n        onClose();\n      })\n      .catch(error => {\n        console.error('Failed to add company', error);\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n  return (\n    <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n      {({ setFieldValue, isSubmitting }) => (\n        <Form>\n          <div className=\"form-control w-full max-w-xs\">\n            <label htmlFor=\"name\" className=\"label text-xl\">Company Name</label>\n            <Field id=\"name\" name=\"name\" placeholder=\"Company Name\" className=\"input input-bordered w-full max-w-xs\" />\n            <ErrorMessage name=\"name\" component=\"div\" className=\"text-error text-xl\" />\n          </div>\n\n          <div className=\"form-control w-full max-w-xs my-6\">\n            <label htmlFor=\"image\" className=\"label text-xl\">Company Logo</label>\n            <input id=\"image\" name=\"image\" type=\"file\" onChange={(event) => setFieldValue(\"image\", event.currentTarget.files[0])} className=\"input input-bordered w-full max-w-xs\" />\n          </div>\n\n          <div className=\"flex justify-between\">\n            <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary\">Submit</button>\n            <button type=\"button\" onClick={onClose} className=\"btn btn-error\">Cancel</button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewCompanyForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}