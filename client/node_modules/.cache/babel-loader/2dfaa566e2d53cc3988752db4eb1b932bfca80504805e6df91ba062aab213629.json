{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/NewTodoForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage, FieldArray } from 'formik';\nimport * as Yup from 'yup';\nimport { addTodo } from './slices/contactsSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewToDoForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const contacts = useSelector(contacts => state.companies.companies);\n  const tags = useSelector(state => state.tags.tags);\n  const todoSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required').min(3, 'Title must be at least 3 characters long'),\n    description: Yup.string(),\n    dueDate: Yup.date().nullable(),\n    completed: Yup.boolean(),\n    listId: Yup.number().required('List ID is required').positive('List ID must be a positive number').integer('List ID must be an integer'),\n    selectedTags: Yup.array(Yup.number()).required('At least one tag is required')\n  });\n  const handleSubmit = values => {\n    const todo = {\n      ...values,\n      list_id: parseInt(values.listId, 10),\n      due_date: values.dueDate ? new Date(values.dueDate).toISOString() : null,\n      tags: values.selectedTags\n    };\n    dispatch(addTodo(todo));\n    navigate('/manage-todo');\n  };\n  const handleBack = () => {\n    navigate('/manage-todo');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      children: \"Back to Manage Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: '',\n        description: '',\n        dueDate: '',\n        completed: false,\n        listId: '',\n        selectedTags: []\n      },\n      validationSchema: todoSchema,\n      onSubmit: handleSubmit,\n      children: ({\n        values,\n        setFieldValue\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"title\",\n          placeholder: \"Todo title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"title\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: \"textarea\",\n          name: \"description\",\n          placeholder: \"Todo description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"description\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"date\",\n          name: \"dueDate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"dueDate\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Completed:\", /*#__PURE__*/_jsxDEV(Field, {\n            type: \"checkbox\",\n            name: \"completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), contacts.map(contact => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: contact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"selectedTags\",\n          render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"select\", {\n            multiple: true,\n            value: values.selectedTags,\n            onChange: e => {\n              const options = e.target.options;\n              const value = [];\n              for (let i = 0, l = options.length; i < l; i++) {\n                if (options[i].selected) {\n                  value.push(options[i].value);\n                }\n              }\n              setFieldValue(\"selectedTags\", value);\n            },\n            required: true,\n            children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tag.id,\n              children: tag.name\n            }, tag.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"selectedTags\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(NewToDoForm, \"NYDqpe5Aadh73RTuzgeZJJJyPvE=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = NewToDoForm;\nexport default NewToDoForm;\nvar _c;\n$RefreshReg$(_c, \"NewToDoForm\");","map":{"version":3,"names":["React","useDispatch","useSelector","Formik","Form","Field","ErrorMessage","FieldArray","Yup","addTodo","useNavigate","jsxDEV","_jsxDEV","NewToDoForm","_s","dispatch","navigate","contacts","state","companies","tags","todoSchema","object","shape","title","string","required","min","description","dueDate","date","nullable","completed","boolean","listId","number","positive","integer","selectedTags","array","handleSubmit","values","todo","list_id","parseInt","due_date","Date","toISOString","handleBack","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","validationSchema","onSubmit","setFieldValue","type","name","placeholder","component","as","value","map","contact","render","arrayHelpers","multiple","onChange","e","options","target","i","l","length","selected","push","tag","id","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/NewTodoForm.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage, FieldArray } from 'formik';\nimport * as Yup from 'yup';\nimport { addTodo } from './slices/contactsSlice';\nimport { useNavigate } from 'react-router-dom';\n\nconst NewToDoForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const contacts = useSelector(contacts=>state.companies.companies)\n  const tags = useSelector(state => state.tags.tags);\n\n  const todoSchema = Yup.object().shape({\n    title: Yup.string()\n      .required('Title is required')\n      .min(3, 'Title must be at least 3 characters long'),\n    description: Yup.string(),\n    dueDate: Yup.date().nullable(),\n    completed: Yup.boolean(),\n    listId: Yup.number()\n      .required('List ID is required')\n      .positive('List ID must be a positive number')\n      .integer('List ID must be an integer'),\n    selectedTags: Yup.array(Yup.number()).required('At least one tag is required'),\n  });\n\n  const handleSubmit = (values) => {\n    const todo = {\n      ...values,\n      list_id: parseInt(values.listId, 10),\n      due_date: values.dueDate ? new Date(values.dueDate).toISOString() : null,\n      tags: values.selectedTags,\n    };\n    dispatch(addTodo(todo));\n    navigate('/manage-todo');\n  };\n\n  const handleBack = () => {\n    navigate('/manage-todo');\n  };\n\n  return (\n    <div>\n      <button onClick={handleBack}>Back to Manage Todo</button>\n      <Formik\n        initialValues={{\n          title: '',\n          description: '',\n          dueDate: '',\n          completed: false,\n          listId: '',\n          selectedTags: [],\n        }}\n        validationSchema={todoSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, setFieldValue }) => (\n          <Form>\n            <Field type=\"text\" name=\"title\" placeholder=\"Todo title\" />\n            <ErrorMessage name=\"title\" component=\"div\" />\n\n            <Field as=\"textarea\" name=\"description\" placeholder=\"Todo description\" />\n            <ErrorMessage name=\"description\" component=\"div\" />\n\n            <Field type=\"date\" name=\"dueDate\" />\n            <ErrorMessage name=\"dueDate\" component=\"div\" />\n\n            <label>\n              Completed:\n              <Field type=\"checkbox\" name=\"completed\" />\n            </label>\n\n            {/* <Field type=\"number\" name=\"listId\" placeholder=\"List ID\" />\n            <ErrorMessage name=\"listId\" component=\"div\" /> */}\n            <Field>\n              <option value=\"\">Select List</option>\n              {contacts.map(contact=>(\n                <option>\n                  {contact}\n                </option>\n              ))}\n            </Field>\n\n            <FieldArray\n              name=\"selectedTags\"\n              render={arrayHelpers => (\n                <select\n                  multiple={true}\n                  value={values.selectedTags}\n                  onChange={e => {\n                    const options = e.target.options;\n                    const value = [];\n                    for (let i = 0, l = options.length; i < l; i++) {\n                      if (options[i].selected) {\n                        value.push(options[i].value);\n                      }\n                    }\n                    setFieldValue(\"selectedTags\", value);\n                  }}\n                  required\n                >\n                  {tags.map(tag => (\n                    <option key={tag.id} value={tag.id}>\n                      {tag.name}\n                    </option>\n                  ))}\n                </select>\n              )}\n            />\n            <ErrorMessage name=\"selectedTags\" component=\"div\" />\n\n            <button type=\"submit\">Add Todo</button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NewToDoForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,EAAEC,UAAU,QAAQ,QAAQ;AACtE,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGf,WAAW,CAACe,QAAQ,IAAEC,KAAK,CAACC,SAAS,CAACA,SAAS,CAAC;EACjE,MAAMC,IAAI,GAAGlB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACE,IAAI,CAACA,IAAI,CAAC;EAElD,MAAMC,UAAU,GAAGb,GAAG,CAACc,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IACpCC,KAAK,EAAEhB,GAAG,CAACiB,MAAM,CAAC,CAAC,CAChBC,QAAQ,CAAC,mBAAmB,CAAC,CAC7BC,GAAG,CAAC,CAAC,EAAE,0CAA0C,CAAC;IACrDC,WAAW,EAAEpB,GAAG,CAACiB,MAAM,CAAC,CAAC;IACzBI,OAAO,EAAErB,GAAG,CAACsB,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IAC9BC,SAAS,EAAExB,GAAG,CAACyB,OAAO,CAAC,CAAC;IACxBC,MAAM,EAAE1B,GAAG,CAAC2B,MAAM,CAAC,CAAC,CACjBT,QAAQ,CAAC,qBAAqB,CAAC,CAC/BU,QAAQ,CAAC,mCAAmC,CAAC,CAC7CC,OAAO,CAAC,4BAA4B,CAAC;IACxCC,YAAY,EAAE9B,GAAG,CAAC+B,KAAK,CAAC/B,GAAG,CAAC2B,MAAM,CAAC,CAAC,CAAC,CAACT,QAAQ,CAAC,8BAA8B;EAC/E,CAAC,CAAC;EAEF,MAAMc,YAAY,GAAIC,MAAM,IAAK;IAC/B,MAAMC,IAAI,GAAG;MACX,GAAGD,MAAM;MACTE,OAAO,EAAEC,QAAQ,CAACH,MAAM,CAACP,MAAM,EAAE,EAAE,CAAC;MACpCW,QAAQ,EAAEJ,MAAM,CAACZ,OAAO,GAAG,IAAIiB,IAAI,CAACL,MAAM,CAACZ,OAAO,CAAC,CAACkB,WAAW,CAAC,CAAC,GAAG,IAAI;MACxE3B,IAAI,EAAEqB,MAAM,CAACH;IACf,CAAC;IACDvB,QAAQ,CAACN,OAAO,CAACiC,IAAI,CAAC,CAAC;IACvB1B,QAAQ,CAAC,cAAc,CAAC;EAC1B,CAAC;EAED,MAAMgC,UAAU,GAAGA,CAAA,KAAM;IACvBhC,QAAQ,CAAC,cAAc,CAAC;EAC1B,CAAC;EAED,oBACEJ,OAAA;IAAAqC,QAAA,gBACErC,OAAA;MAAQsC,OAAO,EAAEF,UAAW;MAAAC,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzD1C,OAAA,CAACT,MAAM;MACLoD,aAAa,EAAE;QACb/B,KAAK,EAAE,EAAE;QACTI,WAAW,EAAE,EAAE;QACfC,OAAO,EAAE,EAAE;QACXG,SAAS,EAAE,KAAK;QAChBE,MAAM,EAAE,EAAE;QACVI,YAAY,EAAE;MAChB,CAAE;MACFkB,gBAAgB,EAAEnC,UAAW;MAC7BoC,QAAQ,EAAEjB,YAAa;MAAAS,QAAA,EAEtBA,CAAC;QAAER,MAAM;QAAEiB;MAAc,CAAC,kBACzB9C,OAAA,CAACR,IAAI;QAAA6C,QAAA,gBACHrC,OAAA,CAACP,KAAK;UAACsD,IAAI,EAAC,MAAM;UAACC,IAAI,EAAC,OAAO;UAACC,WAAW,EAAC;QAAY;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3D1C,OAAA,CAACN,YAAY;UAACsD,IAAI,EAAC,OAAO;UAACE,SAAS,EAAC;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAE7C1C,OAAA,CAACP,KAAK;UAAC0D,EAAE,EAAC,UAAU;UAACH,IAAI,EAAC,aAAa;UAACC,WAAW,EAAC;QAAkB;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzE1C,OAAA,CAACN,YAAY;UAACsD,IAAI,EAAC,aAAa;UAACE,SAAS,EAAC;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEnD1C,OAAA,CAACP,KAAK;UAACsD,IAAI,EAAC,MAAM;UAACC,IAAI,EAAC;QAAS;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpC1C,OAAA,CAACN,YAAY;UAACsD,IAAI,EAAC,SAAS;UAACE,SAAS,EAAC;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAE/C1C,OAAA;UAAAqC,QAAA,GAAO,YAEL,eAAArC,OAAA,CAACP,KAAK;YAACsD,IAAI,EAAC,UAAU;YAACC,IAAI,EAAC;UAAW;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,eAIR1C,OAAA,CAACP,KAAK;UAAA4C,QAAA,gBACJrC,OAAA;YAAQoD,KAAK,EAAC,EAAE;YAAAf,QAAA,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACpCrC,QAAQ,CAACgD,GAAG,CAACC,OAAO,iBACnBtD,OAAA;YAAAqC,QAAA,EACGiB;UAAO;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eAER1C,OAAA,CAACL,UAAU;UACTqD,IAAI,EAAC,cAAc;UACnBO,MAAM,EAAEC,YAAY,iBAClBxD,OAAA;YACEyD,QAAQ,EAAE,IAAK;YACfL,KAAK,EAAEvB,MAAM,CAACH,YAAa;YAC3BgC,QAAQ,EAAEC,CAAC,IAAI;cACb,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACD,OAAO;cAChC,MAAMR,KAAK,GAAG,EAAE;cAChB,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGH,OAAO,CAACI,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;gBAC9C,IAAIF,OAAO,CAACE,CAAC,CAAC,CAACG,QAAQ,EAAE;kBACvBb,KAAK,CAACc,IAAI,CAACN,OAAO,CAACE,CAAC,CAAC,CAACV,KAAK,CAAC;gBAC9B;cACF;cACAN,aAAa,CAAC,cAAc,EAAEM,KAAK,CAAC;YACtC,CAAE;YACFtC,QAAQ;YAAAuB,QAAA,EAEP7B,IAAI,CAAC6C,GAAG,CAACc,GAAG,iBACXnE,OAAA;cAAqBoD,KAAK,EAAEe,GAAG,CAACC,EAAG;cAAA/B,QAAA,EAChC8B,GAAG,CAACnB;YAAI,GADEmB,GAAG,CAACC,EAAE;cAAA7B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEX,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QACR;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACF1C,OAAA,CAACN,YAAY;UAACsD,IAAI,EAAC,cAAc;UAACE,SAAS,EAAC;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEpD1C,OAAA;UAAQ+C,IAAI,EAAC,QAAQ;UAAAV,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxC,EAAA,CA/GID,WAAW;EAAA,QACEZ,WAAW,EACXS,WAAW,EACXR,WAAW,EACfA,WAAW;AAAA;AAAA+E,EAAA,GAJpBpE,WAAW;AAiHjB,eAAeA,WAAW;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}