{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Projects/contact_todo/client/src/components/NewCompanyForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCompany } from './slices/companiesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCompanyForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const loggedInUserId = useSelector(state => state.auth.user);\n  console.log('this is new id', loggedInUserId);\n  const initialValues = {\n    name: '',\n    image: null\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Company name is required')\n  });\n  const onSubmit = (values, {\n    resetForm,\n    setSubmitting\n  }) => {\n    if (!loggedInUserId) {\n      console.error(\"User ID is not available\");\n      setSubmitting(false); // Stop the submission process\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', values.name);\n    formData.append('manager_id', loggedInUserId);\n\n    // Append the image file if it exists\n    if (values.image) {\n      formData.append('image', values.image);\n    }\n    dispatch(addCompany(formData)); // Make sure your action creator can handle FormData\n    resetForm();\n    navigate('/manage-companies');\n  };\n  const handleBack = () => {\n    navigate('/manage-companies');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card bg-base-100 shadow-xl p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        className: \"btn btn-accent btn-lg px-10 py-4 text-3xl mb-5\",\n        children: \"Back to Manage Companies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"card-title text-4xl my-4\",\n        children: \"Add New Company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: onSubmit,\n        children: ({\n          isSubmitting,\n          setFieldValue\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control w-full max-w-xs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"label text-4xl\",\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              id: \"name\",\n              name: \"name\",\n              placeholder: \"Company Name\",\n              className: \"input input-bordered input-lg w-full text-lg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"name\",\n              component: \"div\",\n              className: \"text-error text-4xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control w-full max-w-xs my-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image\",\n              className: \"label text-4xl\",\n              children: \"Company Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"image\",\n              name: \"image\",\n              type: \"file\",\n              onChange: event => {\n                setFieldValue(\"image\", event.currentTarget.files[0]);\n              },\n              className: \"input input-bordered input-lg w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: \"btn btn-primary btn-lg p-5 text-4xl flex justify-center items-center w-full\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCompanyForm, \"jZc8qBrx5EWv+Gvfox7pGgkNUXc=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = NewCompanyForm;\nexport default NewCompanyForm;\nvar _c;\n$RefreshReg$(_c, \"NewCompanyForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","useNavigate","Yup","useDispatch","useSelector","addCompany","jsxDEV","_jsxDEV","NewCompanyForm","_s","navigate","dispatch","loggedInUserId","state","auth","user","console","log","initialValues","name","image","validationSchema","object","shape","string","required","onSubmit","values","resetForm","setSubmitting","error","formData","FormData","append","handleBack","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isSubmitting","setFieldValue","htmlFor","id","placeholder","component","type","onChange","event","currentTarget","files","disabled","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Projects/contact_todo/client/src/components/NewCompanyForm.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCompany } from './slices/companiesSlice';\n\nconst NewCompanyForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const loggedInUserId = useSelector((state) => state.auth.user);\n  \n  console.log('this is new id',loggedInUserId)\n\n  const initialValues = {\n    name: '',\n    image: null,\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Company name is required'),\n  });\n\n  const onSubmit = (values, { resetForm, setSubmitting }) => {\n    if (!loggedInUserId) {\n      console.error(\"User ID is not available\");\n      setSubmitting(false); // Stop the submission process\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('name', values.name);\n    formData.append('manager_id', loggedInUserId);\n    \n    // Append the image file if it exists\n    if (values.image) {\n      formData.append('image', values.image);\n    }\n\n    dispatch(addCompany(formData)); // Make sure your action creator can handle FormData\n    resetForm();\n    navigate('/manage-companies');\n  };\n\n  const handleBack = () => {\n    navigate('/manage-companies');\n  };\n\n  \n\n  return (\n    <div className=\"card bg-base-100 shadow-xl p-8\">\n      <div className=\"card-body\">\n        <button onClick={handleBack} className=\"btn btn-accent btn-lg px-10 py-4 text-3xl mb-5\">\n          Back to Manage Companies\n        </button>\n        <h1 className=\"card-title text-4xl my-4\">Add New Company</h1>\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n          {({ isSubmitting, setFieldValue }) => (\n            <Form>\n              <div className=\"form-control w-full max-w-xs\">\n                <label htmlFor=\"name\" className=\"label text-4xl\">Company Name</label>\n                <Field id=\"name\" name=\"name\" placeholder=\"Company Name\" className=\"input input-bordered input-lg w-full text-lg\" />\n                <ErrorMessage name=\"name\" component=\"div\" className=\"text-error text-4xl\" />\n              </div>\n              \n              <div className=\"form-control w-full max-w-xs my-6\">\n                <label htmlFor=\"image\" className=\"label text-4xl\">Company Logo</label>\n                <input id=\"image\" name=\"image\" type=\"file\" onChange={(event) => {\n                  setFieldValue(\"image\", event.currentTarget.files[0]);\n                }} className=\"input input-bordered input-lg w-full\" />\n              </div>\n\n              <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary btn-lg p-5 text-4xl flex justify-center items-center w-full\">\n                Submit\n              </button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default NewCompanyForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}