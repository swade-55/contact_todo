{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/NewListForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { addList } from './slices/contactsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst newListSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Title must be at least 2 characters long').required('Title is required'),\n  contactId: Yup.number().positive('Contact ID must be a positive number').required('Contact ID is required').integer('Contact ID must be an integer')\n});\nconst NewListForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const contacts = useSelector(state => state.contacts.contacts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card bg-base-100 shadow-xl p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/manage-todo'),\n      className: \"btn btn-secondary\",\n      children: \"Back to Manage Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: '',\n        contactId: ''\n      },\n      validationSchema: newListSchema,\n      onSubmit: (values, {\n        resetForm\n      }) => {\n        dispatch(addList({\n          title: values.title,\n          contact_id: parseInt(values.contactId, 10)\n        }));\n        resetForm();\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"title\",\n          placeholder: \"List title\",\n          className: \"input input-bordered w-full max-w-xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"title\",\n          component: \"div\",\n          className: \"text-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: \"select\",\n          name: \"contactId\",\n          className: \"select select-bordered w-full max-w-xs\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), contacts.map(contact => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: contact.id,\n            children: contact.name\n          }, contact.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"contactId\",\n          component: \"div\",\n          className: \"text-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          className: \"btn btn-primary mt-4\",\n          children: \"Add List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(NewListForm, \"4Ky7nFuZqOOT1ZagkS69W2aLJWg=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = NewListForm;\nexport default NewListForm;\nvar _c;\n$RefreshReg$(_c, \"NewListForm\");","map":{"version":3,"names":["React","useDispatch","useSelector","useNavigate","Formik","Form","Field","ErrorMessage","Yup","addList","jsxDEV","_jsxDEV","newListSchema","object","shape","title","string","min","required","contactId","number","positive","integer","NewListForm","_s","dispatch","navigate","contacts","state","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","validationSchema","onSubmit","values","resetForm","contact_id","parseInt","isSubmitting","type","name","placeholder","component","as","value","map","contact","id","disabled","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/NewListForm.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { addList } from './slices/contactsSlice';\n\nconst newListSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(2, 'Title must be at least 2 characters long')\n    .required('Title is required'),\n  contactId: Yup.number()\n    .positive('Contact ID must be a positive number')\n    .required('Contact ID is required')\n    .integer('Contact ID must be an integer'),\n});\n\nconst NewListForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  return (\n    <div className=\"card bg-base-100 shadow-xl p-5\">\n      <button onClick={() => navigate('/manage-todo')} className=\"btn btn-secondary\">Back to Manage Todo</button>\n      <Formik\n        initialValues={{ title: '', contactId: '' }}\n        validationSchema={newListSchema}\n        onSubmit={(values, { resetForm }) => {\n          dispatch(addList({\n            title: values.title,\n            contact_id: parseInt(values.contactId, 10),\n          }));\n          resetForm();\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form className=\"form-control\">\n            <Field type=\"text\" name=\"title\" placeholder=\"List title\" className=\"input input-bordered w-full max-w-xs\" />\n            <ErrorMessage name=\"title\" component=\"div\" className=\"text-error\" />\n            <Field as=\"select\" name=\"contactId\" className=\"select select-bordered w-full max-w-xs\">\n              <option value=\"\">Select Contact</option>\n              {contacts.map(contact => (\n                <option key={contact.id} value={contact.id}>\n                  {contact.name}\n                </option>\n              ))}\n            </Field>\n            <ErrorMessage name=\"contactId\" component=\"div\" className=\"text-error\" />\n\n            <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary mt-4\">\n              Add List\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NewListForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}