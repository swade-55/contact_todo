{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageToDo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllContacts } from './slices/contactsSlice';\nimport ContactListsSidebar from './ContactListsSidebar';\nimport TodosDisplay from './TodosDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageToDo = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedContactId, setSelectedContactId] = useState('');\n  const [selectedListId, setSelectedListId] = useState('');\n  const contacts = useSelector(state => state.contacts.contacts);\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n  const handleContactChange = e => {\n    setSelectedContactId(e.target.value);\n    setSelectedListId(''); // Reset selected list when contact changes\n  };\n  const handleListSelect = listId => {\n    setSelectedListId(listId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleContactChange,\n        value: selectedContactId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), contacts.map(contact => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: contact.id,\n          children: contact.name\n        }, contact.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactListsSidebar, {\n        selectedContactId: selectedContactId,\n        onListSelect: handleListSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(TodosDisplay, {\n        selectedListId: selectedListId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageToDo, \"Bq6xGKQJZMUXkEF9z4EZ2GAyKcI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ManageToDo;\nexport default ManageToDo;\nvar _c;\n$RefreshReg$(_c, \"ManageToDo\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","fetchAllContacts","ContactListsSidebar","TodosDisplay","jsxDEV","_jsxDEV","ManageToDo","_s","dispatch","selectedContactId","setSelectedContactId","selectedListId","setSelectedListId","contacts","state","handleContactChange","e","target","value","handleListSelect","listId","style","display","children","flex","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","contact","id","name","onListSelect","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageToDo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllContacts } from './slices/contactsSlice';\nimport ContactListsSidebar from './ContactListsSidebar';\nimport TodosDisplay from './TodosDisplay';\n\nconst ManageToDo = () => {\n  const dispatch = useDispatch();\n  const [selectedContactId, setSelectedContactId] = useState('');\n  const [selectedListId, setSelectedListId] = useState('');\n  const contacts = useSelector((state) => state.contacts.contacts);\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const handleContactChange = (e) => {\n    setSelectedContactId(e.target.value);\n    setSelectedListId(''); // Reset selected list when contact changes\n  };\n\n  const handleListSelect = (listId) => {\n    setSelectedListId(listId);\n  };\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ flex: 1 }}>\n        <select onChange={handleContactChange} value={selectedContactId}>\n          <option value=\"\">Select Contact</option>\n          {contacts.map((contact) => (\n            <option key={contact.id} value={contact.id}>\n              {contact.name}\n            </option>\n          ))}\n        </select>\n        <ContactListsSidebar selectedContactId={selectedContactId} onListSelect={handleListSelect} />\n      </div>\n      <div style={{ flex: 3 }}>\n        <TodosDisplay selectedListId={selectedListId} />\n      </div>\n    </div>\n  );\n};\n\nexport default ManageToDo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}