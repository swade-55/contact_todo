{"ast":null,"code":"import React,{useState}from'react';import{useSelector,useDispatch}from'react-redux';import{useNavigate}from'react-router-dom';import{Formik,Form,Field,ErrorMessage}from'formik';import*as Yup from'yup';import{updateContact,deleteContact}from'./slices/contactsSlice';import'../styles/ManageContacts.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const ManageContacts=()=>{const contacts=useSelector(state=>state.contacts.contacts);const companies=useSelector(state=>state.companies.companies);const dispatch=useDispatch();const navigate=useNavigate();const[editRowId,setEditRowId]=useState(null);const[selectedCompanyId,setSelectedCompanyId]=useState('');const contactSchema=Yup.object().shape({name:Yup.string().required('Name is required').min(2,'Name must be at least 2 characters').max(50,'Name must not exceed 50 characters'),status:Yup.string().required('Status is required')});const handleBack=()=>{navigate('/');};const filteredContacts=selectedCompanyId?contacts.filter(contact=>contact.company_id.toString()===selectedCompanyId):contacts;const handleAddContactClick=()=>{navigate('/add-contact');};const handleCancelClick=()=>{setEditRowId(null);};const handleCompanyChange=event=>{setSelectedCompanyId(event.target.value);};const handleDeleteClick=contactId=>{if(window.confirm('Are you sure you want to delete this contact?')){dispatch(deleteContact(contactId)).catch(error=>{console.error('Delete failed',error);});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleAddContactClick,children:\"Add New Contact\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleBack,children:\"Back to Home\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedCompanyId,onChange:handleCompanyChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a Company\"}),companies.map(company=>/*#__PURE__*/_jsx(\"option\",{value:company.id,children:company.name},company.id))]}),/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Company\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredContacts.map(contact=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:contact.id}),/*#__PURE__*/_jsx(\"td\",{children:contact.company.name}),/*#__PURE__*/_jsx(\"td\",{children:editRowId===contact.id?/*#__PURE__*/_jsx(Formik,{initialValues:{name:contact.name,status:contact.status},validationSchema:contactSchema,onSubmit:(values,_ref)=>{let{setSubmitting}=_ref;dispatch(updateContact({...contact,...values})).catch(error=>console.error('Update failed',error));setEditRowId(null);setSubmitting(false);},children:_ref2=>{let{isSubmitting}=_ref2;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Field,{name:\"name\",type:\"text\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"name\",component:\"div\"}),/*#__PURE__*/_jsxs(Field,{as:\"select\",name:\"status\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Status\"}),/*#__PURE__*/_jsx(\"option\",{value:\"hot\",children:\"Hot\"}),/*#__PURE__*/_jsx(\"option\",{value:\"warm\",children:\"Warm\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cold\",children:\"Cold\"})]}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"status\",component:\"div\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isSubmitting,children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleCancelClick,children:\"Cancel\"})]});}}):contact.name}),/*#__PURE__*/_jsx(\"td\",{children:contact.status}),/*#__PURE__*/_jsx(\"td\",{children:editRowId===contact.id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteClick(contact.id),children:\"Delete\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCancelClick,children:\"Cancel\"})]}):/*#__PURE__*/_jsx(\"button\",{onClick:()=>setEditRowId(contact.id),children:\"Edit\"})})]},contact.id))})]})]});};export default ManageContacts;","map":{"version":3,"names":["React","useState","useSelector","useDispatch","useNavigate","Formik","Form","Field","ErrorMessage","Yup","updateContact","deleteContact","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ManageContacts","contacts","state","companies","dispatch","navigate","editRowId","setEditRowId","selectedCompanyId","setSelectedCompanyId","contactSchema","object","shape","name","string","required","min","max","status","handleBack","filteredContacts","filter","contact","company_id","toString","handleAddContactClick","handleCancelClick","handleCompanyChange","event","target","value","handleDeleteClick","contactId","window","confirm","catch","error","console","className","children","onClick","onChange","map","company","id","initialValues","validationSchema","onSubmit","values","_ref","setSubmitting","_ref2","isSubmitting","type","component","as","disabled"],"sources":["/home/samuelrcwade/Development/Code/Phase4/contact_todo/client/src/components/ManageContacts.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { updateContact, deleteContact } from './slices/contactsSlice';\nimport '../styles/ManageContacts.css';\n\nconst ManageContacts = () => {\n  const contacts = useSelector((state) => state.contacts.contacts);\n  const companies = useSelector(state=>state.companies.companies)\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [editRowId, setEditRowId] = useState(null);\n  const [selectedCompanyId,setSelectedCompanyId] = useState('')\n\n  const contactSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required')\n      .min(2, 'Name must be at least 2 characters')\n      .max(50, 'Name must not exceed 50 characters'),\n    status: Yup.string()\n      .required('Status is required'),\n  });\n\n  const handleBack = () => {\n    navigate('/');\n  };\n\n  const filteredContacts = selectedCompanyId\n    ? contacts.filter(contact => contact.company_id.toString() === selectedCompanyId)\n    : contacts;\n\n  const handleAddContactClick = () => {\n    navigate('/add-contact');\n  };\n\n  const handleCancelClick = () => {\n    setEditRowId(null);\n  };\n\n  const handleCompanyChange = (event)=>{\n    setSelectedCompanyId(event.target.value)\n  }\n\n  const handleDeleteClick = (contactId) => {\n    if (window.confirm('Are you sure you want to delete this contact?')) {\n      dispatch(deleteContact(contactId))\n        .catch((error) => {\n          console.error('Delete failed', error);\n        });\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <button onClick={handleAddContactClick}>Add New Contact</button>\n      <button onClick={handleBack}>Back to Home</button>\n      <select value={selectedCompanyId} onChange={handleCompanyChange}>\n        <option value=\"\">Select a Company</option>\n        {companies.map((company) => (\n          <option key={company.id} value={company.id}>\n            {company.name}\n          </option>\n        ))}\n      </select>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Company</th>\n            <th>Name</th>\n            <th>Status</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n        {filteredContacts.map((contact) => (\n            <tr key={contact.id}>\n              <td>{contact.id}</td>\n              <td>{contact.company.name}</td>\n              <td>\n                {editRowId === contact.id ? (\n                  <Formik\n                    initialValues={{ name: contact.name, status: contact.status }}\n                    validationSchema={contactSchema}\n                    onSubmit={(values, { setSubmitting }) => {\n                      dispatch(updateContact({ ...contact, ...values }))\n                        .catch((error) => console.error('Update failed', error));\n                      setEditRowId(null);\n                      setSubmitting(false);\n                    }}\n                  >\n                    {({ isSubmitting }) => (\n                      <Form>\n                        <Field name=\"name\" type=\"text\" />\n                        <ErrorMessage name=\"name\" component=\"div\" />\n                        <Field as=\"select\" name=\"status\">\n                          <option value=\"\">Select Status</option>\n                          <option value=\"hot\">Hot</option>\n                          <option value=\"warm\">Warm</option>\n                          <option value=\"cold\">Cold</option>\n                        </Field>\n                        <ErrorMessage name=\"status\" component=\"div\" />\n                        <button type=\"submit\" disabled={isSubmitting}>Save</button>\n                        <button type=\"button\" onClick={handleCancelClick}>Cancel</button>\n                      </Form>\n                    )}\n                  </Formik>\n                ) : (\n                  contact.name\n                )}\n              </td>\n              <td>\n                {contact.status}\n              </td>\n              <td>\n                {editRowId === contact.id ? (\n                  <>\n                    <button onClick={() => handleDeleteClick(contact.id)}>Delete</button>\n                    <button onClick={handleCancelClick}>Cancel</button>\n                  </>\n                ) : (\n                  <button onClick={() => setEditRowId(contact.id)}>Edit</button>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ManageContacts;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,MAAM,CAAEC,IAAI,CAAEC,KAAK,CAAEC,YAAY,KAAQ,QAAQ,CAC1D,MAAO,GAAK,CAAAC,GAAG,KAAM,KAAK,CAC1B,OAASC,aAAa,CAAEC,aAAa,KAAQ,wBAAwB,CACrE,MAAO,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEtC,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,QAAQ,CAAGjB,WAAW,CAAEkB,KAAK,EAAKA,KAAK,CAACD,QAAQ,CAACA,QAAQ,CAAC,CAChE,KAAM,CAAAE,SAAS,CAAGnB,WAAW,CAACkB,KAAK,EAAEA,KAAK,CAACC,SAAS,CAACA,SAAS,CAAC,CAC/D,KAAM,CAAAC,QAAQ,CAAGnB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAoB,QAAQ,CAAGnB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACoB,SAAS,CAAEC,YAAY,CAAC,CAAGxB,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACyB,iBAAiB,CAACC,oBAAoB,CAAC,CAAG1B,QAAQ,CAAC,EAAE,CAAC,CAE7D,KAAM,CAAA2B,aAAa,CAAGnB,GAAG,CAACoB,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC,CACvCC,IAAI,CAAEtB,GAAG,CAACuB,MAAM,CAAC,CAAC,CACfC,QAAQ,CAAC,kBAAkB,CAAC,CAC5BC,GAAG,CAAC,CAAC,CAAE,oCAAoC,CAAC,CAC5CC,GAAG,CAAC,EAAE,CAAE,oCAAoC,CAAC,CAChDC,MAAM,CAAE3B,GAAG,CAACuB,MAAM,CAAC,CAAC,CACjBC,QAAQ,CAAC,oBAAoB,CAClC,CAAC,CAAC,CAEF,KAAM,CAAAI,UAAU,CAAGA,CAAA,GAAM,CACvBd,QAAQ,CAAC,GAAG,CAAC,CACf,CAAC,CAED,KAAM,CAAAe,gBAAgB,CAAGZ,iBAAiB,CACtCP,QAAQ,CAACoB,MAAM,CAACC,OAAO,EAAIA,OAAO,CAACC,UAAU,CAACC,QAAQ,CAAC,CAAC,GAAKhB,iBAAiB,CAAC,CAC/EP,QAAQ,CAEZ,KAAM,CAAAwB,qBAAqB,CAAGA,CAAA,GAAM,CAClCpB,QAAQ,CAAC,cAAc,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAqB,iBAAiB,CAAGA,CAAA,GAAM,CAC9BnB,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAED,KAAM,CAAAoB,mBAAmB,CAAIC,KAAK,EAAG,CACnCnB,oBAAoB,CAACmB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAC1C,CAAC,CAED,KAAM,CAAAC,iBAAiB,CAAIC,SAAS,EAAK,CACvC,GAAIC,MAAM,CAACC,OAAO,CAAC,+CAA+C,CAAC,CAAE,CACnE9B,QAAQ,CAACX,aAAa,CAACuC,SAAS,CAAC,CAAC,CAC/BG,KAAK,CAAEC,KAAK,EAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACvC,CAAC,CAAC,CACN,CACF,CAAC,CAED,mBACEvC,KAAA,QAAKyC,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB5C,IAAA,WAAQ6C,OAAO,CAAEf,qBAAsB,CAAAc,QAAA,CAAC,iBAAe,CAAQ,CAAC,cAChE5C,IAAA,WAAQ6C,OAAO,CAAErB,UAAW,CAAAoB,QAAA,CAAC,cAAY,CAAQ,CAAC,cAClD1C,KAAA,WAAQiC,KAAK,CAAEtB,iBAAkB,CAACiC,QAAQ,CAAEd,mBAAoB,CAAAY,QAAA,eAC9D5C,IAAA,WAAQmC,KAAK,CAAC,EAAE,CAAAS,QAAA,CAAC,kBAAgB,CAAQ,CAAC,CACzCpC,SAAS,CAACuC,GAAG,CAAEC,OAAO,eACrBhD,IAAA,WAAyBmC,KAAK,CAAEa,OAAO,CAACC,EAAG,CAAAL,QAAA,CACxCI,OAAO,CAAC9B,IAAI,EADF8B,OAAO,CAACC,EAEb,CACT,CAAC,EACI,CAAC,cACT/C,KAAA,UAAOyC,SAAS,CAAC,OAAO,CAAAC,QAAA,eACtB5C,IAAA,UAAA4C,QAAA,cACE1C,KAAA,OAAA0C,QAAA,eACE5C,IAAA,OAAA4C,QAAA,CAAI,IAAE,CAAI,CAAC,cACX5C,IAAA,OAAA4C,QAAA,CAAI,SAAO,CAAI,CAAC,cAChB5C,IAAA,OAAA4C,QAAA,CAAI,MAAI,CAAI,CAAC,cACb5C,IAAA,OAAA4C,QAAA,CAAI,QAAM,CAAI,CAAC,cACf5C,IAAA,OAAA4C,QAAA,CAAI,SAAO,CAAI,CAAC,EACd,CAAC,CACA,CAAC,cACR5C,IAAA,UAAA4C,QAAA,CACCnB,gBAAgB,CAACsB,GAAG,CAAEpB,OAAO,eAC1BzB,KAAA,OAAA0C,QAAA,eACE5C,IAAA,OAAA4C,QAAA,CAAKjB,OAAO,CAACsB,EAAE,CAAK,CAAC,cACrBjD,IAAA,OAAA4C,QAAA,CAAKjB,OAAO,CAACqB,OAAO,CAAC9B,IAAI,CAAK,CAAC,cAC/BlB,IAAA,OAAA4C,QAAA,CACGjC,SAAS,GAAKgB,OAAO,CAACsB,EAAE,cACvBjD,IAAA,CAACR,MAAM,EACL0D,aAAa,CAAE,CAAEhC,IAAI,CAAES,OAAO,CAACT,IAAI,CAAEK,MAAM,CAAEI,OAAO,CAACJ,MAAO,CAAE,CAC9D4B,gBAAgB,CAAEpC,aAAc,CAChCqC,QAAQ,CAAEA,CAACC,MAAM,CAAAC,IAAA,GAAwB,IAAtB,CAAEC,aAAc,CAAC,CAAAD,IAAA,CAClC7C,QAAQ,CAACZ,aAAa,CAAC,CAAE,GAAG8B,OAAO,CAAE,GAAG0B,MAAO,CAAC,CAAC,CAAC,CAC/Cb,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CAAC,CAC1D7B,YAAY,CAAC,IAAI,CAAC,CAClB2C,aAAa,CAAC,KAAK,CAAC,CACtB,CAAE,CAAAX,QAAA,CAEDY,KAAA,MAAC,CAAEC,YAAa,CAAC,CAAAD,KAAA,oBAChBtD,KAAA,CAACT,IAAI,EAAAmD,QAAA,eACH5C,IAAA,CAACN,KAAK,EAACwB,IAAI,CAAC,MAAM,CAACwC,IAAI,CAAC,MAAM,CAAE,CAAC,cACjC1D,IAAA,CAACL,YAAY,EAACuB,IAAI,CAAC,MAAM,CAACyC,SAAS,CAAC,KAAK,CAAE,CAAC,cAC5CzD,KAAA,CAACR,KAAK,EAACkE,EAAE,CAAC,QAAQ,CAAC1C,IAAI,CAAC,QAAQ,CAAA0B,QAAA,eAC9B5C,IAAA,WAAQmC,KAAK,CAAC,EAAE,CAAAS,QAAA,CAAC,eAAa,CAAQ,CAAC,cACvC5C,IAAA,WAAQmC,KAAK,CAAC,KAAK,CAAAS,QAAA,CAAC,KAAG,CAAQ,CAAC,cAChC5C,IAAA,WAAQmC,KAAK,CAAC,MAAM,CAAAS,QAAA,CAAC,MAAI,CAAQ,CAAC,cAClC5C,IAAA,WAAQmC,KAAK,CAAC,MAAM,CAAAS,QAAA,CAAC,MAAI,CAAQ,CAAC,EAC7B,CAAC,cACR5C,IAAA,CAACL,YAAY,EAACuB,IAAI,CAAC,QAAQ,CAACyC,SAAS,CAAC,KAAK,CAAE,CAAC,cAC9C3D,IAAA,WAAQ0D,IAAI,CAAC,QAAQ,CAACG,QAAQ,CAAEJ,YAAa,CAAAb,QAAA,CAAC,MAAI,CAAQ,CAAC,cAC3D5C,IAAA,WAAQ0D,IAAI,CAAC,QAAQ,CAACb,OAAO,CAAEd,iBAAkB,CAAAa,QAAA,CAAC,QAAM,CAAQ,CAAC,EAC7D,CAAC,EACR,CACK,CAAC,CAETjB,OAAO,CAACT,IACT,CACC,CAAC,cACLlB,IAAA,OAAA4C,QAAA,CACGjB,OAAO,CAACJ,MAAM,CACb,CAAC,cACLvB,IAAA,OAAA4C,QAAA,CACGjC,SAAS,GAAKgB,OAAO,CAACsB,EAAE,cACvB/C,KAAA,CAAAE,SAAA,EAAAwC,QAAA,eACE5C,IAAA,WAAQ6C,OAAO,CAAEA,CAAA,GAAMT,iBAAiB,CAACT,OAAO,CAACsB,EAAE,CAAE,CAAAL,QAAA,CAAC,QAAM,CAAQ,CAAC,cACrE5C,IAAA,WAAQ6C,OAAO,CAAEd,iBAAkB,CAAAa,QAAA,CAAC,QAAM,CAAQ,CAAC,EACnD,CAAC,cAEH5C,IAAA,WAAQ6C,OAAO,CAAEA,CAAA,GAAMjC,YAAY,CAACe,OAAO,CAACsB,EAAE,CAAE,CAAAL,QAAA,CAAC,MAAI,CAAQ,CAC9D,CACC,CAAC,GA/CEjB,OAAO,CAACsB,EAgDb,CACL,CAAC,CACG,CAAC,EACH,CAAC,EACL,CAAC,CAEV,CAAC,CAED,cAAe,CAAA5C,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}