{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageToDo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllContacts } from './slices/contactsSlice';\nimport { fetchListsAndTodosForContact } from './slices/listsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageToDo = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedContactId, setSelectedContactId] = useState('');\n  const [selectedListId, setSelectedListId] = useState('');\n  const contacts = useSelector(state => state.contacts.contacts);\n  const lists = useSelector(state => state.lists.lists);\n  const todos = selectedListId ? lists.find(list => list.id === selectedListId).todos : [];\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n  useEffect(() => {\n    if (selectedContactId) {\n      dispatch(fetchListsAndTodosForContact(selectedContactId));\n    }\n  }, [selectedContactId, dispatch]);\n  const handleContactChange = e => {\n    setSelectedContactId(e.target.value);\n    setSelectedListId(''); // Reset selected list when contact changes\n  };\n  const handleListSelect = listId => {\n    setSelectedListId(listId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleContactChange,\n        value: selectedContactId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), contacts.map(contact => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: contact.id,\n          children: contact.name\n        }, contact.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: lists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleListSelect(list.id),\n          children: list.name\n        }, list.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 3\n      },\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: todo.title\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageToDo, \"XinyU40LXnRo1OWHzQ6eUkKngCA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = ManageToDo;\nexport default ManageToDo;\nvar _c;\n$RefreshReg$(_c, \"ManageToDo\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","fetchAllContacts","fetchListsAndTodosForContact","jsxDEV","_jsxDEV","ManageToDo","_s","dispatch","selectedContactId","setSelectedContactId","selectedListId","setSelectedListId","contacts","state","lists","todos","find","list","id","handleContactChange","e","target","value","handleListSelect","listId","style","display","children","flex","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","contact","name","onClick","todo","title","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/task_arena/client/src/components/ManageToDo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllContacts } from './slices/contactsSlice';\nimport { fetchListsAndTodosForContact } from './slices/listsSlice';\n\nconst ManageToDo = () => {\n  const dispatch = useDispatch();\n  const [selectedContactId, setSelectedContactId] = useState('');\n  const [selectedListId, setSelectedListId] = useState('');\n  const contacts = useSelector((state) => state.contacts.contacts);\n  const lists = useSelector((state) => state.lists.lists);\n  const todos = selectedListId ? lists.find(list => list.id === selectedListId).todos : [];\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedContactId) {\n      dispatch(fetchListsAndTodosForContact(selectedContactId));\n    }\n  }, [selectedContactId, dispatch]);\n\n  const handleContactChange = (e) => {\n    setSelectedContactId(e.target.value);\n    setSelectedListId(''); // Reset selected list when contact changes\n  };\n\n  const handleListSelect = (listId) => {\n    setSelectedListId(listId);\n  };\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ flex: 1 }}>\n        <select onChange={handleContactChange} value={selectedContactId}>\n          <option value=\"\">Select Contact</option>\n          {contacts.map((contact) => (\n            <option key={contact.id} value={contact.id}>\n              {contact.name}\n            </option>\n          ))}\n        </select>\n        <div>\n          {lists.map((list) => (\n            <div key={list.id} onClick={() => handleListSelect(list.id)}>\n              {list.name}\n            </div>\n          ))}\n        </div>\n      </div>\n      <div style={{ flex: 3 }}>\n        {todos.map((todo) => (\n          <div key={todo.id}>{todo.title}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ManageToDo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}